{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yunsamar\\\\Documents\\\\git\\\\LucidDream\\\\lucid_dream\\\\src\\\\components\\\\Sign.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nexport default function User(props) {\n  const name = props.name;\n  return React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.menuButtonContainerItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.menuDivButton,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, lang.currLang.buttons.signIn)), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.menuDivButton,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, lang.currLang.texts.or)), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.menuDivButton,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, lang.currLang.buttons.signUp)), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.menuDivButton,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.menuDivButton,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: classes.button,\n    onClick: click,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    path: mdiVk,\n    size: 2,\n    color: themeMode.palette.type === 'light' ? 'rgba(0, 0, 0, 0.54)' : 'rgba(255, 255, 255, 1)',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.menuDivButton,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.menuButton,\n    onClick: () => onMenuClick('openAboutPage'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, lang.currLang.buttons.about)));\n}\nUser.propTypes = {\n  name: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["C:/Users/yunsamar/Documents/git/LucidDream/lucid_dream/src/components/Sign.js"],"names":["React","PropTypes","User","props","name","classes","menuButtonContainerItem","menuDivButton","menuButton","lang","currLang","buttons","signIn","texts","or","signUp","button","click","mdiVk","themeMode","palette","type","onMenuClick","about","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function User(props) {\r\n    const { name } = props\r\n    return (\r\n        <Grid item xs={12} className={classes.menuButtonContainerItem} >\r\n            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\r\n                    {lang.currLang.buttons.signIn}\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                <Typography>\r\n                    {lang.currLang.texts.or}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\r\n                    {lang.currLang.buttons.signUp}\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={2} className={classes.menuDivButton} align=\"center\"></Grid>\r\n            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                <IconButton className={classes.button} onClick={click}>\r\n                    <Icon path={mdiVk} size={2} color={themeMode.palette.type === 'light' ? 'rgba(0, 0, 0, 0.54)' : 'rgba(255, 255, 255, 1)'} />\r\n                </IconButton>\r\n            </Grid>\r\n            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                <Button variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.menuButton}\r\n                    onClick={() => (onMenuClick('openAboutPage'))} >\r\n                    {lang.currLang.buttons.about}\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nUser.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n}"]},"metadata":{},"sourceType":"module"}