{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\yunsamar\\\\Documents\\\\git\\\\LucidDream\\\\lucid_dream\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{connect}from'react-redux';import{setLogin}from'../actions/Actions';import DialogActions from'@material-ui/core/DialogActions';import DialogContent from'@material-ui/core/DialogContent';import DialogTitle from'@material-ui/core/DialogTitle';import IconButton from'@material-ui/core/IconButton';import Typography from'@material-ui/core/Typography';import TextField from'@material-ui/core/TextField';import Button from'@material-ui/core/Button';import Dialog from'@material-ui/core/Dialog';import Slide from'@material-ui/core/Slide';import Grid from'@material-ui/core/Grid';import{mdiVk}from'@mdi/js';import Icon from'@mdi/react';var Transition=React.forwardRef(function Transition(props,ref){return React.createElement(Slide,Object.assign({direction:\"up\",ref:ref},props));});var mapStateToProps=function mapStateToProps(store){return{store:store};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{setLoginAction:function setLoginAction(loginState){return dispatch(setLogin(loginState));}};};export default connect(mapStateToProps,mapDispatchToProps)(Sign);function Sign(props){//const { setLoginAction, } = props;\nvar _props$store=props.store,lang=_props$store.lang,themeMode=_props$store.themeMode;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),openLogin=_React$useState2[0],setOpenLogin=_React$useState2[1];var checkLoginState=function checkLoginState(response){// console.log(response);\n// if (response.status === 'connected') {\n//     window.VK.Api.call('users.get', { user_ids: response.session.mid, v: \"5.103\", fields: \"sex, bdate, city, country, has_photo, photo_50, photo_100, photo_200_orig, photo_200, photo_400_orig, photo_max, photo_max_orig, domain, timezone, screen_name, crop_photo\" }, function (r) {\n//         console.log(r.response[0]);\n//         setLoginAction(true);\n//     });\n// }\n};var click=function click(action){switch(action){case'useVk'://window.VK.Auth.login(checkLoginState, 4194304);\nbreak;case'openLogin':setOpenLogin(true);break;case'closeLogin':setOpenLogin(false);break;default:break;}};return React.createElement(Grid,{item:true,xs:12,className:props.classes.menuButtonContainerItem},React.createElement(Dialog,{open:openLogin,TransitionComponent:Transition,keepMounted:true,onClose:function onClose(){click('closeLogin');},\"aria-labelledby\":\"alert-dialog-slide-title\",\"aria-describedby\":\"alert-dialog-slide-description\"},React.createElement(DialogTitle,{id:\"alert-dialog-slide-title\"},lang.currLang.buttons.signIn),React.createElement(DialogContent,null,React.createElement(Grid,{item:true,xs:12,className:props.classes.menuButtonContainerItem},React.createElement(Grid,{item:true,xs:2,className:props.classes.menuDivButton,align:\"center\"},React.createElement(TextField//className={classes.textField}\n,{id:\"email-field\",type:\"email\",label:\"Email\"//value={values.email}\n//onChange={handleChangeEmail}\n})),React.createElement(Grid,{item:true,xs:2,className:props.classes.menuDivButton,align:\"center\"},React.createElement(TextField//id=\"password-field\"\n//className={classes.textField}\n//type={values.showPassword ? 'text' : 'password'}\n,{label:lang.currLang.texts.password//value={values.password}\n//onChange={handleChangePassword}\n// InputProps={{\n//     endAdornment: (\n//         <InputAdornment position=\"end\">\n//             <IconButton\n//                 tabIndex=\"-1\"\n//                 edge=\"end\"\n//                 aria-label=\"toggle password visibility\"\n//                 onClick={handleClickShowPassword}\n//                 onMouseDown={handleMouseDownPassword}\n//             >\n//                 {values.showPassword ? <VisibilityOff /> : <Visibility />}\n//             </IconButton>\n//         </InputAdornment>\n//     ),\n// }}\n})),React.createElement(Grid,{item:true,xs:2,className:props.classes.menuDivButton,align:\"center\"},React.createElement(Typography,null,lang.currLang.texts.or)),React.createElement(Grid,{item:true,xs:2,className:props.classes.menuDivButton,align:\"center\"},React.createElement(IconButton,{className:props.classes.button,onClick:function onClick(){click('useVk');}},React.createElement(\"a\",{href:\"http://10.203.117.137:3001/auth/vk\",title:\"\\u0412\\u043E\\u0439\\u0442\\u0438 \\u0447\\u0435\\u0440\\u0435\\u0437 \\u0412\\u041A\"},React.createElement(Icon,{path:mdiVk,size:2,color:themeMode.palette.type==='light'?'rgba(0, 0, 0, 0.54)':'rgba(255, 255, 255, 1)'})))))),React.createElement(DialogActions,null,React.createElement(Button,{onClick:function onClick(){click('closeLogin');},color:\"primary\"},lang.currLang.buttons.cancel),React.createElement(Button,{onClick:function onClick(){click('closeLogin');},color:\"primary\"},lang.currLang.buttons.signIn))),React.createElement(Grid,{item:true,xs:2,className:props.classes.menuDivButton,align:\"center\"},React.createElement(Button,{variant:\"contained\",color:\"primary\",className:props.classes.menuButton,onClick:function onClick(){click('openLogin');}},lang.currLang.buttons.signIn)),React.createElement(Grid,{item:true,xs:2,className:props.classes.menuDivButton,align:\"center\"},React.createElement(Button,{variant:\"contained\",color:\"primary\",className:props.classes.menuButton},lang.currLang.buttons.signUp)),React.createElement(Grid,{item:true,xs:2,className:props.classes.menuDivButton,align:\"center\"}),React.createElement(Grid,{item:true,xs:2,className:props.classes.menuDivButton,align:\"center\"},React.createElement(Button,{variant:\"contained\",color:\"primary\",className:props.classes.menuButton,onClick:function onClick(){return props.onMenuClick('openAboutPage');}},lang.currLang.buttons.about)));}","map":{"version":3,"sources":["C:/Users/yunsamar/Documents/git/LucidDream/lucid_dream/src/components/Sign.js"],"names":["React","connect","setLogin","DialogActions","DialogContent","DialogTitle","IconButton","Typography","TextField","Button","Dialog","Slide","Grid","mdiVk","Icon","Transition","forwardRef","props","ref","mapStateToProps","store","mapDispatchToProps","dispatch","setLoginAction","loginState","Sign","lang","themeMode","useState","openLogin","setOpenLogin","checkLoginState","response","click","action","classes","menuButtonContainerItem","currLang","buttons","signIn","menuDivButton","texts","password","or","button","palette","type","cancel","menuButton","signUp","onMenuClick","about"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setLogin } from '../actions/Actions';\r\n\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { mdiVk } from '@mdi/js';\r\nimport Icon from '@mdi/react';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        store,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setLoginAction: loginState => dispatch(setLogin(loginState)),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Sign)\r\n\r\nfunction Sign(props) {\r\n    //const { setLoginAction, } = props;\r\n    const { lang, themeMode, } = props.store;\r\n\r\n    const [openLogin, setOpenLogin] = React.useState(false);\r\n\r\n    const checkLoginState = (response) => {\r\n        // console.log(response);\r\n        // if (response.status === 'connected') {\r\n        //     window.VK.Api.call('users.get', { user_ids: response.session.mid, v: \"5.103\", fields: \"sex, bdate, city, country, has_photo, photo_50, photo_100, photo_200_orig, photo_200, photo_400_orig, photo_max, photo_max_orig, domain, timezone, screen_name, crop_photo\" }, function (r) {\r\n        //         console.log(r.response[0]);\r\n        //         setLoginAction(true);\r\n        //     });\r\n        // }\r\n    };\r\n\r\n    const click = (action) => {\r\n        switch (action) {\r\n            case 'useVk':\r\n                //window.VK.Auth.login(checkLoginState, 4194304);\r\n\r\n                break;\r\n            case 'openLogin':\r\n                setOpenLogin(true);\r\n                break;\r\n            case 'closeLogin':\r\n                setOpenLogin(false);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} className={props.classes.menuButtonContainerItem}>\r\n            <Dialog\r\n                open={openLogin}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={() => { click('closeLogin') }}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\" >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">\r\n                    {lang.currLang.buttons.signIn}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid item xs={12} className={props.classes.menuButtonContainerItem}>\r\n\r\n                        <Grid item xs={2} className={props.classes.menuDivButton} align=\"center\">\r\n                            <TextField\r\n                                //className={classes.textField}\r\n                                id=\"email-field\"\r\n                                type=\"email\"\r\n                                label=\"Email\"\r\n                            //value={values.email}\r\n                            //onChange={handleChangeEmail}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2} className={props.classes.menuDivButton} align=\"center\">\r\n                            <TextField\r\n                                //id=\"password-field\"\r\n                                //className={classes.textField}\r\n                                //type={values.showPassword ? 'text' : 'password'}\r\n                                label={lang.currLang.texts.password}\r\n                            //value={values.password}\r\n                            //onChange={handleChangePassword}\r\n                            // InputProps={{\r\n                            //     endAdornment: (\r\n                            //         <InputAdornment position=\"end\">\r\n                            //             <IconButton\r\n                            //                 tabIndex=\"-1\"\r\n                            //                 edge=\"end\"\r\n                            //                 aria-label=\"toggle password visibility\"\r\n                            //                 onClick={handleClickShowPassword}\r\n                            //                 onMouseDown={handleMouseDownPassword}\r\n                            //             >\r\n                            //                 {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                            //             </IconButton>\r\n                            //         </InputAdornment>\r\n                            //     ),\r\n                            // }}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2} className={props.classes.menuDivButton} align=\"center\">\r\n                            <Typography>\r\n                                {lang.currLang.texts.or}\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2} className={props.classes.menuDivButton} align=\"center\">\r\n                            <IconButton className={props.classes.button} onClick={() => { click('useVk') }}>\r\n                                <a href={\"http://10.203.117.137:3001/auth/vk\"}\r\n                                    title=\"Войти через ВК\">\r\n                                    <Icon path={mdiVk} size={2} color={themeMode.palette.type === 'light' ? 'rgba(0, 0, 0, 0.54)' : 'rgba(255, 255, 255, 1)'} />\r\n                                </a>\r\n                            </IconButton>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => { click('closeLogin') }} color=\"primary\">\r\n                        {lang.currLang.buttons.cancel}\r\n                    </Button>\r\n                    <Button onClick={() => { click('closeLogin') }} color=\"primary\">\r\n                        {lang.currLang.buttons.signIn}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Grid item xs={2} className={props.classes.menuDivButton} align=\"center\">\r\n                <Button variant=\"contained\" color=\"primary\" className={props.classes.menuButton} onClick={() => { click('openLogin') }}>\r\n                    {lang.currLang.buttons.signIn}\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid item xs={2} className={props.classes.menuDivButton} align=\"center\">\r\n                <Button variant=\"contained\" color=\"primary\" className={props.classes.menuButton}>\r\n                    {lang.currLang.buttons.signUp}\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid item xs={2} className={props.classes.menuDivButton} align=\"center\"></Grid>\r\n\r\n            <Grid item xs={2} className={props.classes.menuDivButton} align=\"center\">\r\n                <Button variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={props.classes.menuButton}\r\n                    onClick={() => (props.onMenuClick('openAboutPage'))} >\r\n                    {lang.currLang.buttons.about}\r\n                </Button>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\nSign.propTypes = {\r\n    setLoginAction: PropTypes.func.isRequired,\r\n}"]},"metadata":{},"sourceType":"module"}