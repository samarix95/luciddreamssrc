{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\yunsamar\\\\Documents\\\\git\\\\LucidDream\\\\lucid_dream\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\yunsamar\\\\Documents\\\\git\\\\LucidDream\\\\lucid_dream\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\yunsamar\\\\Documents\\\\git\\\\LucidDream\\\\lucid_dream\\\\src\\\\components\\\\MainPage.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport Sign from './Sign';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst MainPage = () => {\n  const classes = useStyles();\n  const userData = useContext(UserProvider.context);\n  const loginType = !_.isEmpty(userData) ? _.find(data, d => d.name === userData.provider) : {};\n  console.log(loginType);\n  const _props$store = props.store,\n        lang = _props$store.lang,\n        login = _props$store.login,\n        clouds = _props$store.clouds,\n        stars = _props$store.stars,\n        themeMode = _props$store.themeMode;\n  const muiTheme = createMuiTheme(themeMode);\n  const _props = props,\n        setCurrLangAction = _props.setCurrLangAction,\n        setCloudsAction = _props.setCloudsAction,\n        setStarsAction = _props.setStarsAction,\n        setThemeModeAction = _props.setThemeModeAction;\n\n  const _useState = useState({\n    mainPage: true,\n    aboutPage: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        page = _useState2[0],\n        setPage = _useState2[1];\n\n  const switchMode = () => {\n    let newPaletteType = themeMode.palette.type === \"light\" ? \"dark\" : \"light\";\n    let primaryColor = themeMode.palette.type === \"light\" ? \"#f9a825\" : \"#3f51b5\";\n    let secondaryColor = themeMode.palette.type === \"light\" ? \"#f50057\" : \"#f50057\";\n    setThemeModeAction({\n      type: newPaletteType,\n      primary: {\n        main: primaryColor\n      },\n      secondary: {\n        main: secondaryColor\n      }\n    });\n  };\n\n  const onAstronautClick = () => {\n    alert('Тут должны перейти на страницу космонафта');\n  };\n\n  const onMapClick = () => {\n    alert('Тут должны перейти на страницу карты');\n  };\n\n  const changeLanguage = language => {\n    if (language === 'Ru') {\n      setCurrLangAction(RuDict);\n    } else {\n      setCurrLangAction(EnDict);\n    }\n  };\n\n  const onMenuClick = action => {\n    let newPages = page;\n\n    switch (action) {\n      case 'openAboutPage':\n        newPages = _objectSpread({}, newPages, {\n          aboutPage: true\n        });\n        newPages = _objectSpread({}, newPages, {\n          mainPage: false\n        });\n        setPage(newPages);\n        break;\n\n      case 'closeAboutPage':\n        newPages = _objectSpread({}, newPages, {\n          aboutPage: false\n        });\n        newPages = _objectSpread({}, newPages, {\n          mainPage: true\n        });\n        setPage(newPages);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    for (let i = 0; i < params.amountStars; i++) {\n      let size = Math.round(Math.random() * 10) === 0 ? params.size.giant : randomBetween(params.size.min, params.size.max);\n      setStarsAction(React.createElement(\"div\", {\n        className: classes.AppStar,\n        key: i,\n        style: {\n          left: randomBetween(0, 100) + \"%\",\n          top: randomBetween(0, 100) + \"%\",\n          width: size + \"px\",\n          height: size + \"px\",\n          boxShadow: \"0 0 \" + size + \"px \" + size / 2 + \"px #043668\",\n          animationDuration: randomBetween(params.duration.min, params.duration.max) + \"s\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }));\n    }\n\n    for (let i = 0; i < params.amountClouds; i++) {\n      let left = Math.round(Math.random() * 50 + 90);\n      let top = Math.round(Math.random() * 100 / 100 * 90);\n      let scale = Math.random() * 1.5 - 0.5;\n      let opacity = Math.random() * 90 / 100;\n      let speed = Math.random() * 30 + 15;\n      setCloudsAction(React.createElement(\"div\", {\n        className: classes.AppCloud,\n        key: i,\n        style: {\n          left: left + '%',\n          top: top + '%',\n          width: '400px',\n          height: '100px',\n          transform: 'scale(' + scale + ')',\n          opacity: opacity,\n          animationDuration: speed + 's'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }));\n    } // window.VK.init({\n    //     apiId: 7227007\n    // });\n\n\n    if (new Date().getHours() > 15) {\n      setThemeModeAction({\n        type: \"dark\",\n        primary: {\n          main: \"#f9a825\"\n        },\n        secondary: {\n          main: \"#f50057\"\n        }\n      });\n    } else {\n      setThemeModeAction({\n        type: \"light\",\n        primary: {\n          main: \"#3f51b5\"\n        },\n        secondary: {\n          main: \"#f50057\"\n        }\n      });\n    }\n  }, [classes, setCloudsAction, setStarsAction, setThemeModeAction]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.AppDivDark,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.AppDivLight,\n    style: themeMode.palette.type === \"light\" ? {\n      opacity: 1\n    } : {\n      opacity: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), themeMode.palette.type === \"light\" ? React.createElement(\"div\", {\n    className: classes.AppCloudsDiv,\n    style: themeMode.palette.type === \"light\" ? {\n      opacity: 1\n    } : {\n      opacity: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, clouds.clouds) : React.createElement(\"div\", {\n    className: classes.AppStarsDiv,\n    style: themeMode.palette.type === \"light\" ? {\n      opacity: 0\n    } : {\n      opacity: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, stars.stars)), React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.mainPage,\n    style: page.mainPage === true ? {\n      transform: 'translateY(0%)'\n    } : {\n      transform: 'translateY(-100%)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.mainGridContainer,\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"stretch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    className: classes.mainGridHeadItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    className: classes.mainGridContainer,\n    direction: \"row\",\n    justify: \"space-around\",\n    alignItems: \"stretch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, login.isLogin && React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(ButtonBase, {\n    className: classes.AstronautButton,\n    type: \"button\",\n    focusRipple: true,\n    onClick: onAstronautClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.AstronautDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.AstronautImg,\n    style: themeMode.palette.type === \"light\" ? {\n      filter: 'invert(0)'\n    } : {\n      filter: 'invert(1)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(ButtonBase, {\n    className: classes.image,\n    type: \"button\",\n    focusRipple: true,\n    onClick: switchMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.SkyDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.SunSrc,\n    style: themeMode.palette.type === \"dark\" ? {\n      transform: 'translateY(36vw)'\n    } : {\n      transform: 'translateY(0)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.MoonSrc,\n    style: themeMode.palette.type === \"dark\" ? {\n      transform: 'translateY(0)'\n    } : {\n      transform: 'translateY(-36vw)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  })))), login.isLogin && React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(ButtonBase, {\n    className: classes.MapButton,\n    type: \"button\",\n    focusRipple: true,\n    onClick: onMapClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.MapDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.MapImg,\n    style: themeMode.palette.type === \"light\" ? {\n      filter: 'invert(0)'\n    } : {\n      filter: 'invert(1)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  })))))), React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    className: classes.mainGridBodyItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.mainGridContainer,\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"stretch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.menuButtonContainer,\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"stretch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, !login.isLogin && React.createElement(Sign, {\n    classes: classes,\n    onMenuClick: onMenuClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }), login.isLogin && React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.menuButtonContainerItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.menuDivButton,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, lang.currLang.buttons.dreamJoirnal)), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.menuDivButton,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, lang.currLang.buttons.addDream)), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.menuDivButton,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, lang.currLang.buttons.addCDream)), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.menuDivButton,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, lang.currLang.buttons.techniques)), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.menuDivButton,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, lang.currLang.buttons.adventures)), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.menuDivButton,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.menuButton,\n    onClick: () => onMenuClick('openAboutPage'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, lang.currLang.buttons.about)))))), React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    className: classes.mainGridFooterItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.menuButtonContainerFooterLanguageButtons,\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      changeLanguage('Ru');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, \"RU\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      changeLanguage('En');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, \"EN\")))))), React.createElement(\"div\", {\n    className: classes.aboutPage,\n    style: page.aboutPage === true ? {\n      transform: 'translateY(-100%)'\n    } : {\n      transform: 'translateY(0%)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    className: classes.aboutGridContainer,\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    alignItems: \"stretch\",\n    spacing: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    className: classes.aboutGridItem,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.aboutPaper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }, lang.currLang.texts.about))), React.createElement(Grid, {\n    item: true,\n    className: classes.aboutGridItem,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.menuButton,\n    onClick: () => onMenuClick('closeAboutPage'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }, lang.currLang.buttons.close))))));\n};\n\nexport default MainPage;","map":{"version":3,"sources":["C:/Users/yunsamar/Documents/git/LucidDream/lucid_dream/src/components/MainPage.jsx"],"names":["React","Sign","ButtonBase","Typography","Button","Paper","Grid","MainPage","classes","useStyles","userData","useContext","UserProvider","context","loginType","_","isEmpty","find","data","d","name","provider","console","log","props","store","lang","login","clouds","stars","themeMode","muiTheme","createMuiTheme","setCurrLangAction","setCloudsAction","setStarsAction","setThemeModeAction","useState","mainPage","aboutPage","page","setPage","switchMode","newPaletteType","palette","type","primaryColor","secondaryColor","primary","main","secondary","onAstronautClick","alert","onMapClick","changeLanguage","language","RuDict","EnDict","onMenuClick","action","newPages","useEffect","i","params","amountStars","size","Math","round","random","giant","randomBetween","min","max","AppStar","left","top","width","height","boxShadow","animationDuration","duration","amountClouds","scale","opacity","speed","AppCloud","transform","Date","getHours","AppDivDark","AppDivLight","AppCloudsDiv","AppStarsDiv","root","mainGridContainer","mainGridHeadItem","isLogin","AstronautButton","AstronautDiv","AstronautImg","filter","image","SkyDiv","SunSrc","MoonSrc","MapButton","MapDiv","MapImg","mainGridBodyItem","menuButtonContainer","menuButtonContainerItem","menuDivButton","menuButton","currLang","buttons","dreamJoirnal","addDream","addCDream","techniques","adventures","about","mainGridFooterItem","menuButtonContainerFooterLanguageButtons","aboutGridContainer","aboutGridItem","aboutPaper","texts","close"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport Sign from './Sign';\r\n\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst MainPage = () => {\r\n\r\n\r\n    const classes = useStyles();\r\n    const userData = useContext(UserProvider.context);\r\n    const loginType = !_.isEmpty(userData) ? _.find(data, d => d.name === userData.provider) : {};\r\n\r\n    console.log(loginType);\r\n\r\n    const {\r\n        lang,\r\n        //user,\r\n        login,\r\n        clouds,\r\n        stars,\r\n        themeMode, } = props.store;\r\n\r\n    const muiTheme = createMuiTheme(themeMode);\r\n\r\n    const {\r\n        setCurrLangAction,\r\n        setCloudsAction,\r\n        setStarsAction,\r\n        setThemeModeAction, } = props;\r\n\r\n    const [page, setPage] = useState({\r\n        mainPage: true,\r\n        aboutPage: false,\r\n    });\r\n\r\n    const switchMode = () => {\r\n        let newPaletteType = themeMode.palette.type === \"light\" ? \"dark\" : \"light\";\r\n        let primaryColor = themeMode.palette.type === \"light\" ? \"#f9a825\" : \"#3f51b5\";\r\n        let secondaryColor = themeMode.palette.type === \"light\" ? \"#f50057\" : \"#f50057\";\r\n        setThemeModeAction({\r\n            type: newPaletteType,\r\n            primary: { main: primaryColor },\r\n            secondary: { main: secondaryColor },\r\n        });\r\n    }\r\n    const onAstronautClick = () => {\r\n        alert('Тут должны перейти на страницу космонафта');\r\n    };\r\n    const onMapClick = () => {\r\n        alert('Тут должны перейти на страницу карты');\r\n    };\r\n    const changeLanguage = (language) => {\r\n        if (language === 'Ru') {\r\n            setCurrLangAction(RuDict);\r\n        }\r\n        else {\r\n            setCurrLangAction(EnDict);\r\n        }\r\n    }\r\n    const onMenuClick = (action) => {\r\n        let newPages = page;\r\n        switch (action) {\r\n            case 'openAboutPage':\r\n                newPages = { ...newPages, aboutPage: true };\r\n                newPages = { ...newPages, mainPage: false };\r\n                setPage(newPages);\r\n                break;\r\n            case 'closeAboutPage':\r\n                newPages = { ...newPages, aboutPage: false };\r\n                newPages = { ...newPages, mainPage: true };\r\n                setPage(newPages);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        for (let i = 0; i < params.amountStars; i++) {\r\n            let size = Math.round(Math.random() * 10) === 0 ? params.size.giant : randomBetween(params.size.min, params.size.max);\r\n            setStarsAction(\r\n                <div className={classes.AppStar}\r\n                    key={i}\r\n                    style={{\r\n                        left: randomBetween(0, 100) + \"%\",\r\n                        top: randomBetween(0, 100) + \"%\",\r\n                        width: size + \"px\",\r\n                        height: size + \"px\",\r\n                        boxShadow: \"0 0 \" + size + \"px \" + size / 2 + \"px #043668\",\r\n                        animationDuration: randomBetween(params.duration.min, params.duration.max) + \"s\",\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n        for (let i = 0; i < params.amountClouds; i++) {\r\n            let left = Math.round(Math.random() * 50 + 90);\r\n            let top = Math.round(Math.random() * 100 / 100 * 90);\r\n            let scale = Math.random() * 1.5 - 0.5;\r\n            let opacity = Math.random() * 90 / 100;\r\n            let speed = Math.random() * 30 + 15;\r\n            setCloudsAction(\r\n                <div className={classes.AppCloud}\r\n                    key={i}\r\n                    style={{\r\n                        left: left + '%',\r\n                        top: top + '%',\r\n                        width: '400px',\r\n                        height: '100px',\r\n                        transform: 'scale(' + scale + ')',\r\n                        opacity: opacity,\r\n                        animationDuration: speed + 's',\r\n                    }} />\r\n            );\r\n        }\r\n        // window.VK.init({\r\n        //     apiId: 7227007\r\n        // });\r\n\r\n        if (new Date().getHours() > 15) {\r\n            setThemeModeAction({\r\n                type: \"dark\",\r\n                primary: { main: \"#f9a825\" },\r\n                secondary: { main: \"#f50057\" },\r\n            });\r\n        }\r\n        else {\r\n            setThemeModeAction({\r\n                type: \"light\",\r\n                primary: { main: \"#3f51b5\" },\r\n                secondary: { main: \"#f50057\" },\r\n            });\r\n        }\r\n    }, [classes, setCloudsAction, setStarsAction, setThemeModeAction]);\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.AppDivDark}>\r\n                <div className={classes.AppDivLight} style={themeMode.palette.type === \"light\" ? { opacity: 1, } : { opacity: 0, }} />\r\n                {themeMode.palette.type === \"light\" ?\r\n                    <div className={classes.AppCloudsDiv} style={themeMode.palette.type === \"light\" ? { opacity: 1, } : { opacity: 0, }} >\r\n                        {clouds.clouds}\r\n                    </div>\r\n                    :\r\n                    <div className={classes.AppStarsDiv} style={themeMode.palette.type === \"light\" ? { opacity: 0, } : { opacity: 1, }} >\r\n                        {stars.stars}\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div className={classes.root}>\r\n\r\n                <div className={classes.mainPage} style={page.mainPage === true ? { transform: 'translateY(0%)' } : { transform: 'translateY(-100%)' }} >\r\n\r\n                    <Grid className={classes.mainGridContainer}\r\n                        container\r\n                        direction=\"column\"\r\n                        justify=\"center\"\r\n                        alignItems=\"stretch\" >\r\n\r\n                        <Grid item xs={4} className={classes.mainGridHeadItem} >\r\n                            <Grid container className={classes.mainGridContainer}\r\n                                direction=\"row\"\r\n                                justify=\"space-around\"\r\n                                alignItems=\"stretch\" >\r\n                                {login.isLogin &&\r\n                                    <Grid item xs={4} >\r\n                                        <ButtonBase className={classes.AstronautButton}\r\n                                            type='button'\r\n                                            focusRipple\r\n                                            onClick={onAstronautClick}>\r\n                                            <div className={classes.AstronautDiv}>\r\n                                                <div className={classes.AstronautImg} style={themeMode.palette.type === \"light\" ? { filter: 'invert(0)', } : { filter: 'invert(1)', }} />\r\n                                            </div>\r\n                                        </ButtonBase>\r\n                                    </Grid>\r\n                                }\r\n                                <Grid item xs={4} >\r\n                                    <ButtonBase className={classes.image}\r\n                                        type='button'\r\n                                        focusRipple\r\n                                        onClick={switchMode}>\r\n                                        <div className={classes.SkyDiv}>\r\n                                            <div className={classes.SunSrc} style={themeMode.palette.type === \"dark\" ? { transform: 'translateY(36vw)' } : { transform: 'translateY(0)' }} />\r\n                                            <div className={classes.MoonSrc} style={themeMode.palette.type === \"dark\" ? { transform: 'translateY(0)' } : { transform: 'translateY(-36vw)' }} />\r\n                                        </div>\r\n                                    </ButtonBase>\r\n                                </Grid>\r\n                                {login.isLogin &&\r\n                                    <Grid item xs={4} >\r\n                                        <ButtonBase className={classes.MapButton}\r\n                                            type='button'\r\n                                            focusRipple\r\n                                            onClick={onMapClick}>\r\n                                            <div className={classes.MapDiv}>\r\n                                                <div className={classes.MapImg} style={themeMode.palette.type === \"light\" ? { filter: 'invert(0)', } : { filter: 'invert(1)', }} />\r\n                                            </div>\r\n                                        </ButtonBase>\r\n                                    </Grid>\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={7} className={classes.mainGridBodyItem} >\r\n\r\n                            <Grid className={classes.mainGridContainer}\r\n                                container\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"stretch\" >\r\n\r\n                                <Grid className={classes.menuButtonContainer}\r\n                                    container\r\n                                    direction=\"column\"\r\n                                    justify=\"center\"\r\n                                    alignItems=\"stretch\" >\r\n\r\n\r\n                                    {!login.isLogin && <Sign classes={classes} onMenuClick={onMenuClick} />}\r\n\r\n                                    {login.isLogin &&\r\n                                        <Grid item xs={12} className={classes.menuButtonContainerItem} >\r\n\r\n                                            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                                                <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\r\n                                                    {lang.currLang.buttons.dreamJoirnal}\r\n                                                </Button>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                                                <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\r\n                                                    {lang.currLang.buttons.addDream}\r\n                                                </Button>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                                                <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\r\n                                                    {lang.currLang.buttons.addCDream}\r\n                                                </Button>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                                                <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\r\n                                                    {lang.currLang.buttons.techniques}\r\n                                                </Button>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                                                <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\r\n                                                    {lang.currLang.buttons.adventures}\r\n                                                </Button>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                                                <Button variant=\"contained\"\r\n                                                    color=\"primary\"\r\n                                                    className={classes.menuButton}\r\n                                                    onClick={() => (onMenuClick('openAboutPage'))} >\r\n                                                    {lang.currLang.buttons.about}\r\n                                                </Button>\r\n                                            </Grid>\r\n\r\n                                        </Grid>\r\n                                    }\r\n\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={1} className={classes.mainGridFooterItem} >\r\n\r\n                            <Grid className={classes.menuButtonContainerFooterLanguageButtons}\r\n                                container\r\n                                direction=\"row\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\" >\r\n\r\n                                <Grid item>\r\n                                    <Button onClick={() => { changeLanguage('Ru') }}>\r\n                                        RU\r\n                                        </Button>\r\n                                </Grid>\r\n\r\n                                <Grid item>\r\n                                    <Button onClick={() => { changeLanguage('En') }}>\r\n                                        EN\r\n                                        </Button>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                </div>\r\n\r\n                <div className={classes.aboutPage} style={page.aboutPage === true ? { transform: 'translateY(-100%)' } : { transform: 'translateY(0%)' }} >\r\n\r\n                    <Grid className={classes.aboutGridContainer}\r\n                        container\r\n                        direction=\"column\"\r\n                        justify=\"center\"\r\n                        alignItems=\"stretch\"\r\n                        spacing={5} >\r\n\r\n                        <Grid item\r\n                            className={classes.aboutGridItem}\r\n                            align='center'>\r\n\r\n                            <Paper className={classes.aboutPaper}>\r\n                                <Typography>\r\n                                    {lang.currLang.texts.about}\r\n                                </Typography>\r\n                            </Paper>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item\r\n                            className={classes.aboutGridItem}\r\n                            align='center'>\r\n\r\n                            <Button variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.menuButton}\r\n                                onClick={() => (onMenuClick('closeAboutPage'))} >\r\n                                {lang.currLang.buttons.close}\r\n                            </Button>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;"]},"metadata":{},"sourceType":"module"}