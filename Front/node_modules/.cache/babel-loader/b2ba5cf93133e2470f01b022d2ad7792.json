{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yunsamar\\\\Documents\\\\git\\\\LucidDream\\\\lucid_dream\\\\src\\\\components\\\\Sign.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { mdiVk } from '@mdi/js';\nimport Icon from '@mdi/react';\nexport default function User(props) {\n  const name = props.name;\n\n  const checkLoginState = response => {\n    if (response.status === 'connected') {\n      window.VK.Api.call('users.get', {\n        user_ids: response.session.mid,\n        v: \"5.103\",\n        fields: \"sex, bdate, city, country, has_photo, photo_50, photo_100, photo_200_orig, photo_200, photo_400_orig, photo_max, photo_max_orig, domain, timezone, screen_name, crop_photo\"\n      }, function (r) {\n        console.log(r.response[0]);\n        setLoginAction(true);\n      });\n    }\n  };\n\n  const click = () => {\n    window.VK.Auth.login(checkLoginState);\n  };\n\n  return React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.menuButtonContainerItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.menuDivButton,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, props.lang.currLang.buttons.signIn)), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.menuDivButton,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, props.lang.currLang.texts.or)), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.menuDivButton,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, props.lang.currLang.buttons.signUp)), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.menuDivButton,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.menuDivButton,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: classes.button,\n    onClick: click,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    path: mdiVk,\n    size: 2,\n    color: themeMode.palette.type === 'light' ? 'rgba(0, 0, 0, 0.54)' : 'rgba(255, 255, 255, 1)',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.menuDivButton,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.menuButton,\n    onClick: () => props.onMenuClick('openAboutPage'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, props.lang.currLang.buttons.about)));\n}\nUser.propTypes = {\n  name: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["C:/Users/yunsamar/Documents/git/LucidDream/lucid_dream/src/components/Sign.js"],"names":["React","PropTypes","IconButton","Typography","Button","Paper","Grid","mdiVk","Icon","User","props","name","checkLoginState","response","status","window","VK","Api","call","user_ids","session","mid","v","fields","r","console","log","setLoginAction","click","Auth","login","classes","menuButtonContainerItem","menuDivButton","menuButton","lang","currLang","buttons","signIn","texts","or","signUp","button","themeMode","palette","type","onMenuClick","about","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { mdiVk } from '@mdi/js';\r\nimport Icon from '@mdi/react'\r\n\r\nexport default function User(props) {\r\n    const { name } = props\r\n\r\n    const checkLoginState = (response) => {\r\n        if (response.status === 'connected') {\r\n            window.VK.Api.call('users.get', { user_ids: response.session.mid, v: \"5.103\", fields: \"sex, bdate, city, country, has_photo, photo_50, photo_100, photo_200_orig, photo_200, photo_400_orig, photo_max, photo_max_orig, domain, timezone, screen_name, crop_photo\" }, function (r) {\r\n                console.log(r.response[0]);\r\n                setLoginAction(true);\r\n            });\r\n        }\r\n    };\r\n\r\n    const click = () => {\r\n        window.VK.Auth.login(checkLoginState);\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} className={classes.menuButtonContainerItem} >\r\n            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\r\n                    {props.lang.currLang.buttons.signIn}\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                <Typography>\r\n                    {props.lang.currLang.texts.or}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\r\n                    {props.lang.currLang.buttons.signUp}\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={2} className={classes.menuDivButton} align=\"center\"></Grid>\r\n            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                <IconButton className={classes.button} onClick={click}>\r\n                    <Icon path={mdiVk} size={2} color={themeMode.palette.type === 'light' ? 'rgba(0, 0, 0, 0.54)' : 'rgba(255, 255, 255, 1)'} />\r\n                </IconButton>\r\n            </Grid>\r\n            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                <Button variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.menuButton}\r\n                    onClick={() => (props.onMenuClick('openAboutPage'))} >\r\n                    {props.lang.currLang.buttons.about}\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nUser.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n}"]},"metadata":{},"sourceType":"module"}