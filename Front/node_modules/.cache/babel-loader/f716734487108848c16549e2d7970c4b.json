{"ast":null,"code":"/**\n * Module dependencies\n */\nvar crypto = require('crypto');\n/**\n * 62 characters in the ascii range that can be used in URLs without special\n * encoding.\n */\n\n\nvar UIDCHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n/**\n * Make a Buffer into a string ready for use in URLs\n *\n * @param {String}\n * @returns {String}\n * @api private\n */\n\nfunction tostr(bytes) {\n  var chars, r, i;\n  r = [];\n\n  for (i = 0; i < bytes.length; i++) {\n    r.push(UIDCHARS[bytes[i] % UIDCHARS.length]);\n  }\n\n  return r.join('');\n}\n/**\n * Generate an Unique Id\n *\n * @param {Number} length  The number of chars of the uid\n * @param {Number} cb (optional)  Callback for async uid generation\n * @api public\n */\n\n\nfunction uid(length, cb) {\n  if (typeof cb === 'undefined') {\n    return tostr(crypto.pseudoRandomBytes(length));\n  } else {\n    crypto.pseudoRandomBytes(length, function (err, bytes) {\n      if (err) return cb(err);\n      cb(null, tostr(bytes));\n    });\n  }\n}\n/**\n * Exports\n */\n\n\nmodule.exports = uid;","map":null,"metadata":{},"sourceType":"script"}