{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yunsamar\\\\Documents\\\\git\\\\LucidDream\\\\lucid_dream\\\\src\\\\components\\\\MainPage.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Sign from './Sign';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { setCloud, setStar, setCurrLang, setThemeMode } from '../actions/Actions';\nimport UserProvider from '../contexts/UserProvider';\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport MapImg from '../img/map.png';\nimport SunImg from '../img/sun.png';\nimport MoonImg from '../img/moon.png';\nimport AstronautImg from '../img/astronaut.png';\nimport RuDict from '../dictionary/ru';\nimport EnDict from '../dictionary/en';\nimport { data } from \"../data/index\"; // const useStyles = makeStyles(theme => ({\n//     root: {\n//         flexGrow: 1,\n//         position: 'fixed',\n//         width: '100%',\n//         height: '100%',\n//     },\n//     mainPage: {\n//         top: 0,\n//         left: 0,\n//         position: ' absolute',\n//         transition: 'all 0.3s linear',\n//         width: '100%',\n//         height: '100%',\n//     },\n//     aboutPage: {\n//         position: ' absolute',\n//         transition: 'all 0.3s linear',\n//         top: '100%',\n//         width: '100%',\n//         height: '100%',\n//     },\n//     AppDivDark: {\n//         position: 'fixed',\n//         background: 'radial-gradient(ellipse at center, rgba(8, 25, 42, 1) 20%, rgba(1, 4, 6, 1) 100%)',\n//         opacity: 1,\n//         margin: 0,\n//         width: '100%',\n//         height: '100%',\n//         zIndex: -3,\n//     },\n//     AppDivLight: {\n//         position: 'absolute',\n//         background: 'radial-gradient(ellipse at center, rgba(207, 225, 237, 1) 20%, rgba(127, 170, 202, 1) 100%)',\n//         transition: 'opacity 0.5s linear',\n//         margin: 0,\n//         opacity: 0,\n//         width: '100%',\n//         height: '100%',\n//         zIndex: -3,\n//     },\n//     AppStarsDiv: {\n//         transition: 'opacity 0.5s linear',\n//         opacity: 0,\n//         position: 'absolute',\n//         width: '100%',\n//         height: '100%',\n//         overflow: 'hidden',\n//         zIndex: -2,\n//     },\n//     AppCloudsDiv: {\n//         transition: 'opacity 0.5s linear',\n//         opacity: 0,\n//         position: 'absolute',\n//         width: '100%',\n//         height: '100%',\n//         overflow: 'hidden',\n//         zIndex: -2,\n//     },\n//     AppStar: {\n//         borderRadius: '100%',\n//         position: 'absolute',\n//         background: 'radial-gradient(ellipse at center, rgba(177, 198, 219, 1) 2%, rgba(5, 63, 118, 1) 100%)',\n//         filter: 'blur(1px)',\n//         animation: '$shine infinite alternate',\n//         zIndex: -1,\n//     },\n//     AppCloud: {\n//         position: 'absolute',\n//         backgroundRepeat: 'no-repeat',\n//         backgroundImage: 'url(https://www.turbotobias.dk/wp-content/uploads/2019/03/White-cloud-type3.svg)',\n//         animation: '$moveclouds infinite linear',\n//         zIndex: -1,\n//     },\n//     image: {\n//         position: 'relative',\n//         left: '50%',\n//         top: '25%',\n//         transform: 'translate(-50%, -25%)',\n//         width: '35vw !important', // Overrides inline-style\n//         height: '35vw',\n//         borderRadius: '50%',\n//     },\n//     SkyDiv: {\n//         position: 'absolute',\n//         borderRadius: '50%',\n//         top: 0,\n//         left: 0,\n//         width: '100%',\n//         height: '100%',\n//         overflow: 'hidden',\n//     },\n//     MoonSrc: {\n//         backgroundSize: 'cover',\n//         background: 'url(' + MoonImg + ')',\n//         backgroundRepeat: 'no-repeat',\n//         position: 'absolute',\n//         top: 0,\n//         left: 0,\n//         width: '100%',\n//         height: '100%',\n//         transition: 'all 0.3s linear',\n//     },\n//     SunSrc: {\n//         backgroundSize: 'cover',\n//         background: 'url(' + SunImg + ')',\n//         backgroundRepeat: 'no-repeat',\n//         position: 'absolute',\n//         top: 0,\n//         left: 0,\n//         width: '100%',\n//         height: '100%',\n//         transition: 'all 0.3s linear',\n//     },\n//     AstronautButton: {\n//         position: 'relative',\n//         left: '50%',\n//         top: '50%',\n//         transform: 'translate(-50%, -50%)',\n//         width: '25vw !important', // Overrides inline-style\n//         height: '25vw',\n//         borderRadius: '50%',\n//     },\n//     AstronautDiv: {\n//         position: 'absolute',\n//         borderRadius: '50%',\n//         top: 0,\n//         left: 0,\n//         width: '100%',\n//         height: '100%',\n//         overflow: 'hidden',\n//         animation: '$swinging 30s infinite linear',\n//     },\n//     AstronautImg: {\n//         backgroundSize: 'cover',\n//         background: 'url(' + AstronautImg + ')',\n//         backgroundRepeat: 'no-repeat',\n//         position: 'absolute',\n//         top: 0,\n//         left: 0,\n//         width: '100%',\n//         height: '100%',\n//         transition: 'filter 0.5s linear',\n//     },\n//     MapButton: {\n//         position: 'relative',\n//         left: '50%',\n//         top: '50%',\n//         transform: 'translate(-50%, -50%)',\n//         width: '25vw !important', // Overrides inline-style\n//         height: '25vw',\n//         borderRadius: '10%',\n//     },\n//     MapDiv: {\n//         position: 'absolute',\n//         top: 0,\n//         left: 0,\n//         width: '100%',\n//         height: '100%',\n//         overflow: 'hidden',\n//         animation: '$swinging 30s infinite linear',\n//     },\n//     MapImg: {\n//         backgroundSize: 'cover',\n//         background: 'url(' + MapImg + ')',\n//         backgroundRepeat: 'no-repeat',\n//         position: 'absolute',\n//         top: 0,\n//         left: 0,\n//         width: '100%',\n//         height: '100%',\n//         transition: 'filter 0.5s linear',\n//     },\n//     mainGridContainer: {\n//         height: '100%',\n//     },\n//     mainGridHeadItem: {\n//         maxWidth: '100% !Important',\n//     },\n//     mainGridBodyItem: {\n//         maxWidth: '100% !Important',\n//     },\n//     menuButtonContainerItem: {\n//         maxWidth: '100% !Important',\n//     },\n//     menuButtonContainer: {\n//         height: '100% !Important',\n//     },\n//     menuButtonGrid: {\n//     },\n//     menuDivButton: {\n//         maxWidth: '100% !Important',\n//         padding: '10px',\n//     },\n//     menuButton: {\n//         minWidth: '55vw',\n//         maxWidth: '55vw',\n//     },\n//     mainGridFooterItem: {\n//         maxWidth: '100% !Important',\n//     },\n//     menuButtonContainerFooterLanguageButtons: {\n//     },\n//     aboutGridContainer: {\n//         width: '100%',\n//         height: '100%',\n//         margin: 0,\n//     },\n//     aboutGridItem: {\n//         width: '100%',\n//     },\n//     aboutPaper: {\n//     },\n//     VKLoginDiv: {\n//         position: 'absolute',\n//         width: '15vw',\n//         height: '15vw',\n//     },\n//     VKLoginButton: {\n//         background: 'url(https://dressirovka70.ru/wp-content/uploads/2019/10/1200px-VK.com-logo.svg1_-1024x1024.png)',\n//         boxShadow: '0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)',\n//         backgroundSize: 'cover',\n//         borderRadius: '25%',\n//         width: '100%',\n//         height: '100%',\n//     },\n//     \"@keyframes shine\": {\n//         \"0%\": {\n//             transform: 'scale(1)',\n//             opacity: '1',\n//         },\n//         \"20%\": {\n//             transform: 'scale(.9)',\n//             opacity: '.8',\n//         },\n//         \"40%\": {\n//             transform: 'scale(1)',\n//             opacity: '.9',\n//         },\n//         \"60%\": {\n//             transform: 'scale(.2)',\n//             opacity: '.1',\n//         },\n//         \"80%\": {\n//             transform: 'scale(.5)',\n//             opacity: '.5',\n//         },\n//         \"100%\": {\n//             transform: 'scale(.9)',\n//             opacity: '.9',\n//         },\n//     },\n//     \"@keyframes moveclouds\": {\n//         '100%': {\n//             left: '-100%',\n//         },\n//     },\n//     \"@keyframes swinging\": {\n//         '0%': {\n//             transform: 'rotate(0)',\n//         },\n//         '10%': {\n//             transform: 'rotate(12deg)',\n//         },\n//         '20%': {\n//             transform: 'rotate(-10deg)',\n//         },\n//         '30%': {\n//             transform: 'rotate(9deg)',\n//         },\n//         '40%': {\n//             transform: 'rotate(-8deg)',\n//         },\n//         '50%': {\n//             transform: 'rotate(7deg)',\n//         },\n//         '60%': {\n//             transform: 'rotate(-6deg)',\n//         },\n//         '70%': {\n//             transform: 'rotate(5deg)',\n//         },\n//         '80%': {\n//             transform: 'rotate(-4deg)',\n//         },\n//         '90%': {\n//             transform: 'rotate(3deg)',\n//         },\n//         '100%': {\n//             transform: 'rotate(0)',\n//         },\n//     }\n// }));\n// const params = {\n//     amountStars: 50,\n//     amountClouds: 10,\n//     size: {\n//         min: 1,\n//         max: 5,\n//         giant: 9\n//     },\n//     duration: {\n//         min: 5,\n//         max: 25,\n//     }\n// }\n// function randomBetween(a, b) {\n//     return (a + (Math.random() * (b - a)));\n// }\n\nconst mapStateToProps = store => {\n  return {\n    store\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrLangAction: currLangState => dispatch(setCurrLang(currLangState)),\n    setCloudsAction: cloudState => dispatch(setCloud(cloudState)),\n    setStarsAction: starState => dispatch(setStar(starState)),\n    setThemeModeAction: paletteState => dispatch(setThemeMode(paletteState))\n  };\n};\n\nfunction MainPage(props) {\n  // const classes = useStyles();\n  // const userData = useContext(UserProvider.context);\n  // const loginType = !_.isEmpty(userData) ? _.find(data, d => d.name === userData.provider) : {};\n  // const { themeMode, } = props.store;\n  // const muiTheme = createMuiTheme(themeMode);\n  // console.log(loginType);\n  // const {\n  //     lang,\n  //     //user,\n  //     login,\n  //     clouds,\n  //     stars,\n  //     themeMode, } = props.store;\n  // const muiTheme = createMuiTheme(themeMode);\n  // const {\n  //     setCurrLangAction,\n  //     setCloudsAction,\n  //     setStarsAction,\n  //     setThemeModeAction, } = props;\n  // const [page, setPage] = useState({\n  //     mainPage: true,\n  //     aboutPage: false,\n  // });\n  // const switchMode = () => {\n  //     let newPaletteType = themeMode.palette.type === \"light\" ? \"dark\" : \"light\";\n  //     let primaryColor = themeMode.palette.type === \"light\" ? \"#f9a825\" : \"#3f51b5\";\n  //     let secondaryColor = themeMode.palette.type === \"light\" ? \"#f50057\" : \"#f50057\";\n  //     setThemeModeAction({\n  //         type: newPaletteType,\n  //         primary: { main: primaryColor },\n  //         secondary: { main: secondaryColor },\n  //     });\n  // }\n  // const onAstronautClick = () => {\n  //     alert('Тут должны перейти на страницу космонафта');\n  // };\n  // const onMapClick = () => {\n  //     alert('Тут должны перейти на страницу карты');\n  // };\n  // const changeLanguage = (language) => {\n  //     if (language === 'Ru') {\n  //         setCurrLangAction(RuDict);\n  //     }\n  //     else {\n  //         setCurrLangAction(EnDict);\n  //     }\n  // }\n  // const onMenuClick = (action) => {\n  //     let newPages = page;\n  //     switch (action) {\n  //         case 'openAboutPage':\n  //             newPages = { ...newPages, aboutPage: true };\n  //             newPages = { ...newPages, mainPage: false };\n  //             setPage(newPages);\n  //             break;\n  //         case 'closeAboutPage':\n  //             newPages = { ...newPages, aboutPage: false };\n  //             newPages = { ...newPages, mainPage: true };\n  //             setPage(newPages);\n  //             break;\n  //         default:\n  //             break;\n  //     }\n  // }\n  // useEffect(() => {\n  //     for (let i = 0; i < params.amountStars; i++) {\n  //         let size = Math.round(Math.random() * 10) === 0 ? params.size.giant : randomBetween(params.size.min, params.size.max);\n  //         setStarsAction(\n  //             <div className={classes.AppStar}\n  //                 key={i}\n  //                 style={{\n  //                     left: randomBetween(0, 100) + \"%\",\n  //                     top: randomBetween(0, 100) + \"%\",\n  //                     width: size + \"px\",\n  //                     height: size + \"px\",\n  //                     boxShadow: \"0 0 \" + size + \"px \" + size / 2 + \"px #043668\",\n  //                     animationDuration: randomBetween(params.duration.min, params.duration.max) + \"s\",\n  //                 }}\n  //             />\n  //         );\n  //     }\n  //     for (let i = 0; i < params.amountClouds; i++) {\n  //         let left = Math.round(Math.random() * 50 + 90);\n  //         let top = Math.round(Math.random() * 100 / 100 * 90);\n  //         let scale = Math.random() * 1.5 - 0.5;\n  //         let opacity = Math.random() * 90 / 100;\n  //         let speed = Math.random() * 30 + 15;\n  //         setCloudsAction(\n  //             <div className={classes.AppCloud}\n  //                 key={i}\n  //                 style={{\n  //                     left: left + '%',\n  //                     top: top + '%',\n  //                     width: '400px',\n  //                     height: '100px',\n  //                     transform: 'scale(' + scale + ')',\n  //                     opacity: opacity,\n  //                     animationDuration: speed + 's',\n  //                 }} />\n  //         );\n  //     }\n  //     // window.VK.init({\n  //     //     apiId: 7227007\n  //     // });\n  //     if (new Date().getHours() > 15) {\n  //         setThemeModeAction({\n  //             type: \"dark\",\n  //             primary: { main: \"#f9a825\" },\n  //             secondary: { main: \"#f50057\" },\n  //         });\n  //     }\n  //     else {\n  //         setThemeModeAction({\n  //             type: \"light\",\n  //             primary: { main: \"#3f51b5\" },\n  //             secondary: { main: \"#f50057\" },\n  //         });\n  //     }\n  // }, [classes, setCloudsAction, setStarsAction, setThemeModeAction]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490\n    },\n    __self: this\n  }, \"Hello\") // <MuiThemeProvider theme={muiTheme}>\n  //     <CssBaseline />\n  //     <div className={classes.AppDivDark}>\n  //         <div className={classes.AppDivLight} style={themeMode.palette.type === \"light\" ? { opacity: 1, } : { opacity: 0, }} />\n  //         {themeMode.palette.type === \"light\" ?\n  //             <div className={classes.AppCloudsDiv} style={themeMode.palette.type === \"light\" ? { opacity: 1, } : { opacity: 0, }} >\n  //                 {clouds.clouds}\n  //             </div>\n  //             :\n  //             <div className={classes.AppStarsDiv} style={themeMode.palette.type === \"light\" ? { opacity: 0, } : { opacity: 1, }} >\n  //                 {stars.stars}\n  //             </div>\n  //         }\n  //     </div>\n  //     <div className={classes.root}>\n  //         <div className={classes.mainPage} style={page.mainPage === true ? { transform: 'translateY(0%)' } : { transform: 'translateY(-100%)' }} >\n  //             <Grid className={classes.mainGridContainer}\n  //                 container\n  //                 direction=\"column\"\n  //                 justify=\"center\"\n  //                 alignItems=\"stretch\" >\n  //                 <Grid item xs={4} className={classes.mainGridHeadItem} >\n  //                     <Grid container className={classes.mainGridContainer}\n  //                         direction=\"row\"\n  //                         justify=\"space-around\"\n  //                         alignItems=\"stretch\" >\n  //                         {login.isLogin &&\n  //                             <Grid item xs={4} >\n  //                                 <ButtonBase className={classes.AstronautButton}\n  //                                     type='button'\n  //                                     focusRipple\n  //                                     onClick={onAstronautClick}>\n  //                                     <div className={classes.AstronautDiv}>\n  //                                         <div className={classes.AstronautImg} style={themeMode.palette.type === \"light\" ? { filter: 'invert(0)', } : { filter: 'invert(1)', }} />\n  //                                     </div>\n  //                                 </ButtonBase>\n  //                             </Grid>\n  //                         }\n  //                         <Grid item xs={4} >\n  //                             <ButtonBase className={classes.image}\n  //                                 type='button'\n  //                                 focusRipple\n  //                                 onClick={switchMode}>\n  //                                 <div className={classes.SkyDiv}>\n  //                                     <div className={classes.SunSrc} style={themeMode.palette.type === \"dark\" ? { transform: 'translateY(36vw)' } : { transform: 'translateY(0)' }} />\n  //                                     <div className={classes.MoonSrc} style={themeMode.palette.type === \"dark\" ? { transform: 'translateY(0)' } : { transform: 'translateY(-36vw)' }} />\n  //                                 </div>\n  //                             </ButtonBase>\n  //                         </Grid>\n  //                         {login.isLogin &&\n  //                             <Grid item xs={4} >\n  //                                 <ButtonBase className={classes.MapButton}\n  //                                     type='button'\n  //                                     focusRipple\n  //                                     onClick={onMapClick}>\n  //                                     <div className={classes.MapDiv}>\n  //                                         <div className={classes.MapImg} style={themeMode.palette.type === \"light\" ? { filter: 'invert(0)', } : { filter: 'invert(1)', }} />\n  //                                     </div>\n  //                                 </ButtonBase>\n  //                             </Grid>\n  //                         }\n  //                     </Grid>\n  //                 </Grid>\n  //                 <Grid item xs={7} className={classes.mainGridBodyItem} >\n  //                     <Grid className={classes.mainGridContainer}\n  //                         container\n  //                         direction=\"column\"\n  //                         justify=\"center\"\n  //                         alignItems=\"stretch\" >\n  //                         <Grid className={classes.menuButtonContainer}\n  //                             container\n  //                             direction=\"column\"\n  //                             justify=\"center\"\n  //                             alignItems=\"stretch\" >\n  //                             {!login.isLogin && <Sign classes={classes} onMenuClick={onMenuClick} />}\n  //                             {login.isLogin &&\n  //                                 <Grid item xs={12} className={classes.menuButtonContainerItem} >\n  //                                     <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\n  //                                         <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\n  //                                             {lang.currLang.buttons.dreamJoirnal}\n  //                                         </Button>\n  //                                     </Grid>\n  //                                     <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\n  //                                         <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\n  //                                             {lang.currLang.buttons.addDream}\n  //                                         </Button>\n  //                                     </Grid>\n  //                                     <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\n  //                                         <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\n  //                                             {lang.currLang.buttons.addCDream}\n  //                                         </Button>\n  //                                     </Grid>\n  //                                     <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\n  //                                         <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\n  //                                             {lang.currLang.buttons.techniques}\n  //                                         </Button>\n  //                                     </Grid>\n  //                                     <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\n  //                                         <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\n  //                                             {lang.currLang.buttons.adventures}\n  //                                         </Button>\n  //                                     </Grid>\n  //                                     <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\n  //                                         <Button variant=\"contained\"\n  //                                             color=\"primary\"\n  //                                             className={classes.menuButton}\n  //                                             onClick={() => (onMenuClick('openAboutPage'))} >\n  //                                             {lang.currLang.buttons.about}\n  //                                         </Button>\n  //                                     </Grid>\n  //                                 </Grid>\n  //                             }\n  //                         </Grid>\n  //                     </Grid>\n  //                 </Grid>\n  //                 <Grid item xs={1} className={classes.mainGridFooterItem} >\n  //                     <Grid className={classes.menuButtonContainerFooterLanguageButtons}\n  //                         container\n  //                         direction=\"row\"\n  //                         justify=\"center\"\n  //                         alignItems=\"center\" >\n  //                         <Grid item>\n  //                             <Button onClick={() => { changeLanguage('Ru') }}>\n  //                                 RU\n  //                                 </Button>\n  //                         </Grid>\n  //                         <Grid item>\n  //                             <Button onClick={() => { changeLanguage('En') }}>\n  //                                 EN\n  //                                 </Button>\n  //                         </Grid>\n  //                     </Grid>\n  //                 </Grid>\n  //             </Grid>\n  //         </div>\n  //         <div className={classes.aboutPage} style={page.aboutPage === true ? { transform: 'translateY(-100%)' } : { transform: 'translateY(0%)' }} >\n  //             <Grid className={classes.aboutGridContainer}\n  //                 container\n  //                 direction=\"column\"\n  //                 justify=\"center\"\n  //                 alignItems=\"stretch\"\n  //                 spacing={5} >\n  //                 <Grid item\n  //                     className={classes.aboutGridItem}\n  //                     align='center'>\n  //                     <Paper className={classes.aboutPaper}>\n  //                         <Typography>\n  //                             {lang.currLang.texts.about}\n  //                         </Typography>\n  //                     </Paper>\n  //                 </Grid>\n  //                 <Grid item\n  //                     className={classes.aboutGridItem}\n  //                     align='center'>\n  //                     <Button variant=\"contained\"\n  //                         color=\"primary\"\n  //                         className={classes.menuButton}\n  //                         onClick={() => (onMenuClick('closeAboutPage'))} >\n  //                         {lang.currLang.buttons.close}\n  //                     </Button>\n  //                 </Grid>\n  //             </Grid>\n  //         </div>\n  //     </div>\n  // </MuiThemeProvider>\n  ;\n}\n\n;\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);","map":{"version":3,"sources":["C:/Users/yunsamar/Documents/git/LucidDream/lucid_dream/src/components/MainPage.jsx"],"names":["React","useState","useEffect","useContext","Sign","ButtonBase","Typography","Button","Paper","Grid","_","connect","setCloud","setStar","setCurrLang","setThemeMode","UserProvider","MuiThemeProvider","createMuiTheme","makeStyles","CssBaseline","MapImg","SunImg","MoonImg","AstronautImg","RuDict","EnDict","data","mapStateToProps","store","mapDispatchToProps","dispatch","setCurrLangAction","currLangState","setCloudsAction","cloudState","setStarsAction","starState","setThemeModeAction","paletteState","MainPage","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,CAAP,MAAc,QAAd;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,WAA5B,EAAyCC,YAAzC,QAA6D,oBAA7D;AAEA,OAAOC,YAAP,MAAyB,0BAAzB;AAEA,SAASC,gBAAT,EAA2BC,cAA3B,EAA2CC,UAA3C,QAA6D,0BAA7D;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,IAAT,QAAqB,eAAreAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHA,IAAAA;AADG,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,iBAAiB,EAAEC,aAAa,IAAIF,QAAQ,CAACjB,WAAW,CAACmB,aAAD,CAAZ,CADzC;AAEHC,IAAAA,eAAe,EAAEC,UAAU,IAAIJ,QAAQ,CAACnB,QAAQ,CAACuB,UAAD,CAAT,CAFpC;AAGHC,IAAAA,cAAc,EAAEC,SAAS,IAAIN,QAAQ,CAAClB,OAAO,CAACwB,SAAD,CAAR,CAHlC;AAIHC,IAAAA,kBAAkB,EAAEC,YAAY,IAAIR,QAAQ,CAAChB,YAAY,CAACwB,YAAD,CAAb;AAJzC,GAAP;AAMH,CAPD;;AASA,SAASC,QAAT,CAAmBC,KAAnB,EAA0B;AACtaiNH;;AAAA;AAED,eAAe9B,OAAO,CAClBiB,eADkB,EAElBE,kBAFkB,CAAP,CAGbU,QAHa,CAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport Sign from './Sign';\r\n\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setCloud, setStar, setCurrLang, setThemeMode } from '../actions/Actions';\r\n\r\nimport UserProvider from '../contexts/UserProvider';\r\n\r\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport MapImg from '../img/map.png';\r\nimport SunImg from '../img/sun.png';\r\nimport MoonImg from '../img/moon.png';\r\nimport AstronautImg from '../img/astronaut.png';\r\n\r\nimport RuDict from '../dictionary/ru';\r\nimport EnDict from '../dictionary/en';\r\nimport { data } from \"../data/index\";\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//     root: {\r\n//         flexGrow: 1,\r\n//         position: 'fixed',\r\n//         width: '100%',\r\n//         height: '100%',\r\n//     },\r\n//     mainPage: {\r\n//         top: 0,\r\n//         left: 0,\r\n//         position: ' absolute',\r\n//         transition: 'all 0.3s linear',\r\n//         width: '100%',\r\n//         height: '100%',\r\n//     },\r\n//     aboutPage: {\r\n//         position: ' absolute',\r\n//         transition: 'all 0.3s linear',\r\n//         top: '100%',\r\n//         width: '100%',\r\n//         height: '100%',\r\n//     },\r\n//     AppDivDark: {\r\n//         position: 'fixed',\r\n//         background: 'radial-gradient(ellipse at center, rgba(8, 25, 42, 1) 20%, rgba(1, 4, 6, 1) 100%)',\r\n//         opacity: 1,\r\n//         margin: 0,\r\n//         width: '100%',\r\n//         height: '100%',\r\n//         zIndex: -3,\r\n//     },\r\n//     AppDivLight: {\r\n//         position: 'absolute',\r\n//         background: 'radial-gradient(ellipse at center, rgba(207, 225, 237, 1) 20%, rgba(127, 170, 202, 1) 100%)',\r\n//         transition: 'opacity 0.5s linear',\r\n//         margin: 0,\r\n//         opacity: 0,\r\n//         width: '100%',\r\n//         height: '100%',\r\n//         zIndex: -3,\r\n//     },\r\n//     AppStarsDiv: {\r\n//         transition: 'opacity 0.5s linear',\r\n//         opacity: 0,\r\n//         position: 'absolute',\r\n//         width: '100%',\r\n//         height: '100%',\r\n//         overflow: 'hidden',\r\n//         zIndex: -2,\r\n//     },\r\n//     AppCloudsDiv: {\r\n//         transition: 'opacity 0.5s linear',\r\n//         opacity: 0,\r\n//         position: 'absolute',\r\n//         width: '100%',\r\n//         height: '100%',\r\n//         overflow: 'hidden',\r\n//         zIndex: -2,\r\n//     },\r\n//     AppStar: {\r\n//         borderRadius: '100%',\r\n//         position: 'absolute',\r\n//         background: 'radial-gradient(ellipse at center, rgba(177, 198, 219, 1) 2%, rgba(5, 63, 118, 1) 100%)',\r\n//         filter: 'blur(1px)',\r\n//         animation: '$shine infinite alternate',\r\n//         zIndex: -1,\r\n//     },\r\n//     AppCloud: {\r\n//         position: 'absolute',\r\n//         backgroundRepeat: 'no-repeat',\r\n//         backgroundImage: 'url(https://www.turbotobias.dk/wp-content/uploads/2019/03/White-cloud-type3.svg)',\r\n//         animation: '$moveclouds infinite linear',\r\n//         zIndex: -1,\r\n//     },\r\n//     image: {\r\n//         position: 'relative',\r\n//         left: '50%',\r\n//         top: '25%',\r\n//         transform: 'translate(-50%, -25%)',\r\n//         width: '35vw !important', // Overrides inline-style\r\n//         height: '35vw',\r\n//         borderRadius: '50%',\r\n//     },\r\n//     SkyDiv: {\r\n//         position: 'absolute',\r\n//         borderRadius: '50%',\r\n//         top: 0,\r\n//         left: 0,\r\n//         width: '100%',\r\n//         height: '100%',\r\n//         overflow: 'hidden',\r\n//     },\r\n//     MoonSrc: {\r\n//         backgroundSize: 'cover',\r\n//         background: 'url(' + MoonImg + ')',\r\n//         backgroundRepeat: 'no-repeat',\r\n//         position: 'absolute',\r\n//         top: 0,\r\n//         left: 0,\r\n//         width: '100%',\r\n//         height: '100%',\r\n//         transition: 'all 0.3s linear',\r\n//     },\r\n//     SunSrc: {\r\n//         backgroundSize: 'cover',\r\n//         background: 'url(' + SunImg + ')',\r\n//         backgroundRepeat: 'no-repeat',\r\n//         position: 'absolute',\r\n//         top: 0,\r\n//         left: 0,\r\n//         width: '100%',\r\n//         height: '100%',\r\n//         transition: 'all 0.3s linear',\r\n//     },\r\n//     AstronautButton: {\r\n//         position: 'relative',\r\n//         left: '50%',\r\n//         top: '50%',\r\n//         transform: 'translate(-50%, -50%)',\r\n//         width: '25vw !important', // Overrides inline-style\r\n//         height: '25vw',\r\n//         borderRadius: '50%',\r\n//     },\r\n//     AstronautDiv: {\r\n//         position: 'absolute',\r\n//         borderRadius: '50%',\r\n//         top: 0,\r\n//         left: 0,\r\n//         width: '100%',\r\n//         height: '100%',\r\n//         overflow: 'hidden',\r\n//         animation: '$swinging 30s infinite linear',\r\n//     },\r\n//     AstronautImg: {\r\n//         backgroundSize: 'cover',\r\n//         background: 'url(' + AstronautImg + ')',\r\n//         backgroundRepeat: 'no-repeat',\r\n//         position: 'absolute',\r\n//         top: 0,\r\n//         left: 0,\r\n//         width: '100%',\r\n//         height: '100%',\r\n//         transition: 'filter 0.5s linear',\r\n//     },\r\n//     MapButton: {\r\n//         position: 'relative',\r\n//         left: '50%',\r\n//         top: '50%',\r\n//         transform: 'translate(-50%, -50%)',\r\n//         width: '25vw !important', // Overrides inline-style\r\n//         height: '25vw',\r\n//         borderRadius: '10%',\r\n//     },\r\n//     MapDiv: {\r\n//         position: 'absolute',\r\n//         top: 0,\r\n//         left: 0,\r\n//         width: '100%',\r\n//         height: '100%',\r\n//         overflow: 'hidden',\r\n//         animation: '$swinging 30s infinite linear',\r\n//     },\r\n//     MapImg: {\r\n//         backgroundSize: 'cover',\r\n//         background: 'url(' + MapImg + ')',\r\n//         backgroundRepeat: 'no-repeat',\r\n//         position: 'absolute',\r\n//         top: 0,\r\n//         left: 0,\r\n//         width: '100%',\r\n//         height: '100%',\r\n//         transition: 'filter 0.5s linear',\r\n//     },\r\n//     mainGridContainer: {\r\n//         height: '100%',\r\n//     },\r\n//     mainGridHeadItem: {\r\n//         maxWidth: '100% !Important',\r\n//     },\r\n//     mainGridBodyItem: {\r\n//         maxWidth: '100% !Important',\r\n//     },\r\n//     menuButtonContainerItem: {\r\n//         maxWidth: '100% !Important',\r\n//     },\r\n//     menuButtonContainer: {\r\n//         height: '100% !Important',\r\n//     },\r\n//     menuButtonGrid: {\r\n//     },\r\n//     menuDivButton: {\r\n//         maxWidth: '100% !Important',\r\n//         padding: '10px',\r\n//     },\r\n//     menuButton: {\r\n//         minWidth: '55vw',\r\n//         maxWidth: '55vw',\r\n//     },\r\n//     mainGridFooterItem: {\r\n//         maxWidth: '100% !Important',\r\n//     },\r\n//     menuButtonContainerFooterLanguageButtons: {\r\n//     },\r\n//     aboutGridContainer: {\r\n//         width: '100%',\r\n//         height: '100%',\r\n//         margin: 0,\r\n//     },\r\n//     aboutGridItem: {\r\n//         width: '100%',\r\n//     },\r\n//     aboutPaper: {\r\n\r\n//     },\r\n//     VKLoginDiv: {\r\n//         position: 'absolute',\r\n//         width: '15vw',\r\n//         height: '15vw',\r\n//     },\r\n//     VKLoginButton: {\r\n//         background: 'url(https://dressirovka70.ru/wp-content/uploads/2019/10/1200px-VK.com-logo.svg1_-1024x1024.png)',\r\n//         boxShadow: '0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)',\r\n//         backgroundSize: 'cover',\r\n//         borderRadius: '25%',\r\n//         width: '100%',\r\n//         height: '100%',\r\n//     },\r\n//     \"@keyframes shine\": {\r\n//         \"0%\": {\r\n//             transform: 'scale(1)',\r\n//             opacity: '1',\r\n//         },\r\n//         \"20%\": {\r\n//             transform: 'scale(.9)',\r\n//             opacity: '.8',\r\n//         },\r\n//         \"40%\": {\r\n//             transform: 'scale(1)',\r\n//             opacity: '.9',\r\n//         },\r\n//         \"60%\": {\r\n//             transform: 'scale(.2)',\r\n//             opacity: '.1',\r\n//         },\r\n//         \"80%\": {\r\n//             transform: 'scale(.5)',\r\n//             opacity: '.5',\r\n//         },\r\n//         \"100%\": {\r\n//             transform: 'scale(.9)',\r\n//             opacity: '.9',\r\n//         },\r\n//     },\r\n//     \"@keyframes moveclouds\": {\r\n//         '100%': {\r\n//             left: '-100%',\r\n//         },\r\n//     },\r\n//     \"@keyframes swinging\": {\r\n//         '0%': {\r\n//             transform: 'rotate(0)',\r\n//         },\r\n//         '10%': {\r\n//             transform: 'rotate(12deg)',\r\n//         },\r\n//         '20%': {\r\n//             transform: 'rotate(-10deg)',\r\n//         },\r\n//         '30%': {\r\n//             transform: 'rotate(9deg)',\r\n//         },\r\n//         '40%': {\r\n//             transform: 'rotate(-8deg)',\r\n//         },\r\n//         '50%': {\r\n//             transform: 'rotate(7deg)',\r\n//         },\r\n//         '60%': {\r\n//             transform: 'rotate(-6deg)',\r\n//         },\r\n//         '70%': {\r\n//             transform: 'rotate(5deg)',\r\n//         },\r\n//         '80%': {\r\n//             transform: 'rotate(-4deg)',\r\n//         },\r\n//         '90%': {\r\n//             transform: 'rotate(3deg)',\r\n//         },\r\n//         '100%': {\r\n//             transform: 'rotate(0)',\r\n//         },\r\n//     }\r\n// }));\r\n\r\n// const params = {\r\n//     amountStars: 50,\r\n//     amountClouds: 10,\r\n//     size: {\r\n//         min: 1,\r\n//         max: 5,\r\n//         giant: 9\r\n//     },\r\n//     duration: {\r\n//         min: 5,\r\n//         max: 25,\r\n//     }\r\n// }\r\n\r\n// function randomBetween(a, b) {\r\n//     return (a + (Math.random() * (b - a)));\r\n// }\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        store,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setCurrLangAction: currLangState => dispatch(setCurrLang(currLangState)),\r\n        setCloudsAction: cloudState => dispatch(setCloud(cloudState)),\r\n        setStarsAction: starState => dispatch(setStar(starState)),\r\n        setThemeModeAction: paletteState => dispatch(setThemeMode(paletteState)),\r\n    }\r\n}\r\n\r\nfunction MainPage (props) {\r\n    // const classes = useStyles();\r\n    // const userData = useContext(UserProvider.context);\r\n    // const loginType = !_.isEmpty(userData) ? _.find(data, d => d.name === userData.provider) : {};\r\n\r\n\r\n    // const { themeMode, } = props.store;\r\n\r\n    // const muiTheme = createMuiTheme(themeMode);\r\n\r\n    // console.log(loginType);\r\n\r\n    // const {\r\n    //     lang,\r\n    //     //user,\r\n    //     login,\r\n    //     clouds,\r\n    //     stars,\r\n    //     themeMode, } = props.store;\r\n\r\n    // const muiTheme = createMuiTheme(themeMode);\r\n\r\n    // const {\r\n    //     setCurrLangAction,\r\n    //     setCloudsAction,\r\n    //     setStarsAction,\r\n    //     setThemeModeAction, } = props;\r\n\r\n    // const [page, setPage] = useState({\r\n    //     mainPage: true,\r\n    //     aboutPage: false,\r\n    // });\r\n\r\n    // const switchMode = () => {\r\n    //     let newPaletteType = themeMode.palette.type === \"light\" ? \"dark\" : \"light\";\r\n    //     let primaryColor = themeMode.palette.type === \"light\" ? \"#f9a825\" : \"#3f51b5\";\r\n    //     let secondaryColor = themeMode.palette.type === \"light\" ? \"#f50057\" : \"#f50057\";\r\n    //     setThemeModeAction({\r\n    //         type: newPaletteType,\r\n    //         primary: { main: primaryColor },\r\n    //         secondary: { main: secondaryColor },\r\n    //     });\r\n    // }\r\n    // const onAstronautClick = () => {\r\n    //     alert('Тут должны перейти на страницу космонафта');\r\n    // };\r\n    // const onMapClick = () => {\r\n    //     alert('Тут должны перейти на страницу карты');\r\n    // };\r\n    // const changeLanguage = (language) => {\r\n    //     if (language === 'Ru') {\r\n    //         setCurrLangAction(RuDict);\r\n    //     }\r\n    //     else {\r\n    //         setCurrLangAction(EnDict);\r\n    //     }\r\n    // }\r\n    // const onMenuClick = (action) => {\r\n    //     let newPages = page;\r\n    //     switch (action) {\r\n    //         case 'openAboutPage':\r\n    //             newPages = { ...newPages, aboutPage: true };\r\n    //             newPages = { ...newPages, mainPage: false };\r\n    //             setPage(newPages);\r\n    //             break;\r\n    //         case 'closeAboutPage':\r\n    //             newPages = { ...newPages, aboutPage: false };\r\n    //             newPages = { ...newPages, mainPage: true };\r\n    //             setPage(newPages);\r\n    //             break;\r\n    //         default:\r\n    //             break;\r\n    //     }\r\n    // }\r\n    // useEffect(() => {\r\n    //     for (let i = 0; i < params.amountStars; i++) {\r\n    //         let size = Math.round(Math.random() * 10) === 0 ? params.size.giant : randomBetween(params.size.min, params.size.max);\r\n    //         setStarsAction(\r\n    //             <div className={classes.AppStar}\r\n    //                 key={i}\r\n    //                 style={{\r\n    //                     left: randomBetween(0, 100) + \"%\",\r\n    //                     top: randomBetween(0, 100) + \"%\",\r\n    //                     width: size + \"px\",\r\n    //                     height: size + \"px\",\r\n    //                     boxShadow: \"0 0 \" + size + \"px \" + size / 2 + \"px #043668\",\r\n    //                     animationDuration: randomBetween(params.duration.min, params.duration.max) + \"s\",\r\n    //                 }}\r\n    //             />\r\n    //         );\r\n    //     }\r\n    //     for (let i = 0; i < params.amountClouds; i++) {\r\n    //         let left = Math.round(Math.random() * 50 + 90);\r\n    //         let top = Math.round(Math.random() * 100 / 100 * 90);\r\n    //         let scale = Math.random() * 1.5 - 0.5;\r\n    //         let opacity = Math.random() * 90 / 100;\r\n    //         let speed = Math.random() * 30 + 15;\r\n    //         setCloudsAction(\r\n    //             <div className={classes.AppCloud}\r\n    //                 key={i}\r\n    //                 style={{\r\n    //                     left: left + '%',\r\n    //                     top: top + '%',\r\n    //                     width: '400px',\r\n    //                     height: '100px',\r\n    //                     transform: 'scale(' + scale + ')',\r\n    //                     opacity: opacity,\r\n    //                     animationDuration: speed + 's',\r\n    //                 }} />\r\n    //         );\r\n    //     }\r\n    //     // window.VK.init({\r\n    //     //     apiId: 7227007\r\n    //     // });\r\n\r\n    //     if (new Date().getHours() > 15) {\r\n    //         setThemeModeAction({\r\n    //             type: \"dark\",\r\n    //             primary: { main: \"#f9a825\" },\r\n    //             secondary: { main: \"#f50057\" },\r\n    //         });\r\n    //     }\r\n    //     else {\r\n    //         setThemeModeAction({\r\n    //             type: \"light\",\r\n    //             primary: { main: \"#3f51b5\" },\r\n    //             secondary: { main: \"#f50057\" },\r\n    //         });\r\n    //     }\r\n    // }, [classes, setCloudsAction, setStarsAction, setThemeModeAction]);\r\n\r\n    return (\r\n        <div>\r\n            Hello\r\n        </div>\r\n        // <MuiThemeProvider theme={muiTheme}>\r\n        //     <CssBaseline />\r\n        //     <div className={classes.AppDivDark}>\r\n        //         <div className={classes.AppDivLight} style={themeMode.palette.type === \"light\" ? { opacity: 1, } : { opacity: 0, }} />\r\n        //         {themeMode.palette.type === \"light\" ?\r\n        //             <div className={classes.AppCloudsDiv} style={themeMode.palette.type === \"light\" ? { opacity: 1, } : { opacity: 0, }} >\r\n        //                 {clouds.clouds}\r\n        //             </div>\r\n        //             :\r\n        //             <div className={classes.AppStarsDiv} style={themeMode.palette.type === \"light\" ? { opacity: 0, } : { opacity: 1, }} >\r\n        //                 {stars.stars}\r\n        //             </div>\r\n        //         }\r\n        //     </div>\r\n\r\n        //     <div className={classes.root}>\r\n\r\n        //         <div className={classes.mainPage} style={page.mainPage === true ? { transform: 'translateY(0%)' } : { transform: 'translateY(-100%)' }} >\r\n\r\n        //             <Grid className={classes.mainGridContainer}\r\n        //                 container\r\n        //                 direction=\"column\"\r\n        //                 justify=\"center\"\r\n        //                 alignItems=\"stretch\" >\r\n\r\n        //                 <Grid item xs={4} className={classes.mainGridHeadItem} >\r\n        //                     <Grid container className={classes.mainGridContainer}\r\n        //                         direction=\"row\"\r\n        //                         justify=\"space-around\"\r\n        //                         alignItems=\"stretch\" >\r\n        //                         {login.isLogin &&\r\n        //                             <Grid item xs={4} >\r\n        //                                 <ButtonBase className={classes.AstronautButton}\r\n        //                                     type='button'\r\n        //                                     focusRipple\r\n        //                                     onClick={onAstronautClick}>\r\n        //                                     <div className={classes.AstronautDiv}>\r\n        //                                         <div className={classes.AstronautImg} style={themeMode.palette.type === \"light\" ? { filter: 'invert(0)', } : { filter: 'invert(1)', }} />\r\n        //                                     </div>\r\n        //                                 </ButtonBase>\r\n        //                             </Grid>\r\n        //                         }\r\n        //                         <Grid item xs={4} >\r\n        //                             <ButtonBase className={classes.image}\r\n        //                                 type='button'\r\n        //                                 focusRipple\r\n        //                                 onClick={switchMode}>\r\n        //                                 <div className={classes.SkyDiv}>\r\n        //                                     <div className={classes.SunSrc} style={themeMode.palette.type === \"dark\" ? { transform: 'translateY(36vw)' } : { transform: 'translateY(0)' }} />\r\n        //                                     <div className={classes.MoonSrc} style={themeMode.palette.type === \"dark\" ? { transform: 'translateY(0)' } : { transform: 'translateY(-36vw)' }} />\r\n        //                                 </div>\r\n        //                             </ButtonBase>\r\n        //                         </Grid>\r\n        //                         {login.isLogin &&\r\n        //                             <Grid item xs={4} >\r\n        //                                 <ButtonBase className={classes.MapButton}\r\n        //                                     type='button'\r\n        //                                     focusRipple\r\n        //                                     onClick={onMapClick}>\r\n        //                                     <div className={classes.MapDiv}>\r\n        //                                         <div className={classes.MapImg} style={themeMode.palette.type === \"light\" ? { filter: 'invert(0)', } : { filter: 'invert(1)', }} />\r\n        //                                     </div>\r\n        //                                 </ButtonBase>\r\n        //                             </Grid>\r\n        //                         }\r\n        //                     </Grid>\r\n        //                 </Grid>\r\n\r\n        //                 <Grid item xs={7} className={classes.mainGridBodyItem} >\r\n\r\n        //                     <Grid className={classes.mainGridContainer}\r\n        //                         container\r\n        //                         direction=\"column\"\r\n        //                         justify=\"center\"\r\n        //                         alignItems=\"stretch\" >\r\n\r\n        //                         <Grid className={classes.menuButtonContainer}\r\n        //                             container\r\n        //                             direction=\"column\"\r\n        //                             justify=\"center\"\r\n        //                             alignItems=\"stretch\" >\r\n\r\n\r\n        //                             {!login.isLogin && <Sign classes={classes} onMenuClick={onMenuClick} />}\r\n\r\n        //                             {login.isLogin &&\r\n        //                                 <Grid item xs={12} className={classes.menuButtonContainerItem} >\r\n\r\n        //                                     <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n        //                                         <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\r\n        //                                             {lang.currLang.buttons.dreamJoirnal}\r\n        //                                         </Button>\r\n        //                                     </Grid>\r\n\r\n        //                                     <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n        //                                         <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\r\n        //                                             {lang.currLang.buttons.addDream}\r\n        //                                         </Button>\r\n        //                                     </Grid>\r\n\r\n        //                                     <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n        //                                         <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\r\n        //                                             {lang.currLang.buttons.addCDream}\r\n        //                                         </Button>\r\n        //                                     </Grid>\r\n\r\n        //                                     <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n        //                                         <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\r\n        //                                             {lang.currLang.buttons.techniques}\r\n        //                                         </Button>\r\n        //                                     </Grid>\r\n\r\n        //                                     <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n        //                                         <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\r\n        //                                             {lang.currLang.buttons.adventures}\r\n        //                                         </Button>\r\n        //                                     </Grid>\r\n\r\n        //                                     <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n        //                                         <Button variant=\"contained\"\r\n        //                                             color=\"primary\"\r\n        //                                             className={classes.menuButton}\r\n        //                                             onClick={() => (onMenuClick('openAboutPage'))} >\r\n        //                                             {lang.currLang.buttons.about}\r\n        //                                         </Button>\r\n        //                                     </Grid>\r\n\r\n        //                                 </Grid>\r\n        //                             }\r\n\r\n        //                         </Grid>\r\n\r\n        //                     </Grid>\r\n\r\n        //                 </Grid>\r\n\r\n        //                 <Grid item xs={1} className={classes.mainGridFooterItem} >\r\n\r\n        //                     <Grid className={classes.menuButtonContainerFooterLanguageButtons}\r\n        //                         container\r\n        //                         direction=\"row\"\r\n        //                         justify=\"center\"\r\n        //                         alignItems=\"center\" >\r\n\r\n        //                         <Grid item>\r\n        //                             <Button onClick={() => { changeLanguage('Ru') }}>\r\n        //                                 RU\r\n        //                                 </Button>\r\n        //                         </Grid>\r\n\r\n        //                         <Grid item>\r\n        //                             <Button onClick={() => { changeLanguage('En') }}>\r\n        //                                 EN\r\n        //                                 </Button>\r\n        //                         </Grid>\r\n\r\n        //                     </Grid>\r\n\r\n        //                 </Grid>\r\n\r\n        //             </Grid>\r\n\r\n        //         </div>\r\n\r\n        //         <div className={classes.aboutPage} style={page.aboutPage === true ? { transform: 'translateY(-100%)' } : { transform: 'translateY(0%)' }} >\r\n\r\n        //             <Grid className={classes.aboutGridContainer}\r\n        //                 container\r\n        //                 direction=\"column\"\r\n        //                 justify=\"center\"\r\n        //                 alignItems=\"stretch\"\r\n        //                 spacing={5} >\r\n\r\n        //                 <Grid item\r\n        //                     className={classes.aboutGridItem}\r\n        //                     align='center'>\r\n\r\n        //                     <Paper className={classes.aboutPaper}>\r\n        //                         <Typography>\r\n        //                             {lang.currLang.texts.about}\r\n        //                         </Typography>\r\n        //                     </Paper>\r\n\r\n        //                 </Grid>\r\n\r\n        //                 <Grid item\r\n        //                     className={classes.aboutGridItem}\r\n        //                     align='center'>\r\n\r\n        //                     <Button variant=\"contained\"\r\n        //                         color=\"primary\"\r\n        //                         className={classes.menuButton}\r\n        //                         onClick={() => (onMenuClick('closeAboutPage'))} >\r\n        //                         {lang.currLang.buttons.close}\r\n        //                     </Button>\r\n\r\n        //                 </Grid>\r\n\r\n        //             </Grid>\r\n\r\n        //         </div>\r\n\r\n        //     </div>\r\n        // </MuiThemeProvider>\r\n    );\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MainPage);"]},"metadata":{},"sourceType":"module"}