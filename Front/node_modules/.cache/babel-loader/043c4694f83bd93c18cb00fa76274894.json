{"ast":null,"code":"/**\n * Reconstructs the original URL of the request.\n *\n * This function builds a URL that corresponds the original URL requested by the\n * client, including the protocol (http or https) and host.\n *\n * If the request passed through any proxies that terminate SSL, the\n * `X-Forwarded-Proto` header is used to detect if the request was encrypted to\n * the proxy, assuming that the proxy has been flagged as trusted.\n *\n * @param {http.IncomingMessage} req\n * @param {Object} [options]\n * @return {String}\n * @api private\n */\nexports.originalURL = function (req, options) {\n  options = options || {};\n  var app = req.app;\n\n  if (app && app.get && app.get('trust proxy')) {\n    options.proxy = true;\n  }\n\n  var trustProxy = options.proxy;\n  var proto = (req.headers['x-forwarded-proto'] || '').toLowerCase(),\n      tls = req.connection.encrypted || trustProxy && 'https' == proto.split(/\\s*,\\s*/)[0],\n      host = trustProxy && req.headers['x-forwarded-host'] || req.headers.host,\n      protocol = tls ? 'https' : 'http',\n      path = req.url || '';\n  return protocol + '://' + host + path;\n};","map":null,"metadata":{},"sourceType":"script"}