{"version":3,"sources":["img/map.png","img/sun.png","img/moon.png","img/astronaut.png","img/vk.png","actions/Actions.js","dictionary/en.js","reducers/currLang.js","reducers/user.js","reducers/login.js","reducers/cloud.js","reducers/star.js","reducers/themeMode.js","reducers/index.js","store/configureStore.js","history.js","contexts/UserProvider.jsx","components/Sign.js","dictionary/ru.js","data/index.js","components/MainPage.jsx","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","SET_LOGIN","SET_CLOUD","SET_STAR","SET_LANG","SET_THEME_MODE","setLogin","state","type","loginState","words","buttons","signIn","signUp","dreamJoirnal","addDream","addCDream","techniques","adventures","close","about","cancel","texts","or","password","initialState","currLang","EnDict","name","isLogin","clouds","stars","palette","primary","main","secondary","rootReducer","combineReducers","lang","action","currLangState","user","login","cloudState","starState","themeMode","themeModeState","store","createStore","createBrowserHistory","context","createContext","UserProvider","children","useState","setUser","useEffect","fetch","then","res","json","catch","err","console","log","Provider","value","Transition","React","forwardRef","props","ref","Slide","direction","connect","dispatch","setLoginAction","openLogin","setOpenLogin","click","Grid","item","xs","className","classes","menuButtonContainerItem","Dialog","open","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","menuDivButton","align","TextField","label","Typography","IconButton","button","onClick","href","title","path","mdiVk","size","color","DialogActions","Button","variant","menuButton","onMenuClick","data","img","VKIcon","alt","txt","useStyles","makeStyles","theme","root","flexGrow","position","width","height","mainPage","top","left","transition","aboutPage","AppDivDark","background","opacity","margin","zIndex","AppDivLight","AppStarsDiv","overflow","AppCloudsDiv","AppStar","borderRadius","filter","animation","AppCloud","backgroundRepeat","backgroundImage","image","transform","SkyDiv","MoonSrc","backgroundSize","MoonImg","SunSrc","SunImg","AstronautButton","AstronautDiv","AstronautImg","MapButton","MapDiv","MapImg","mainGridContainer","mainGridHeadItem","maxWidth","mainGridBodyItem","menuButtonContainer","menuButtonGrid","padding","minWidth","mainGridFooterItem","menuButtonContainerFooterLanguageButtons","aboutGridContainer","aboutGridItem","aboutPaper","VKLoginDiv","VKLoginButton","boxShadow","params","amountStars","amountClouds","min","max","giant","duration","randomBetween","a","b","Math","random","setCurrLangAction","setCloudsAction","setStarsAction","setThemeModeAction","paletteState","userData","useContext","_","isEmpty","find","d","provider","muiTheme","createMuiTheme","page","setPage","changeLanguage","language","RuDict","newPages","i","round","key","style","animationDuration","scale","speed","Date","getHours","CssBaseline","container","justify","alignItems","ButtonBase","focusRipple","alert","newPaletteType","primaryColor","secondaryColor","Sign","spacing","Paper","App","history","component","MainPage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81141657.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/map.71ce46a8.png\";","module.exports = __webpack_public_path__ + \"static/media/sun.4f817e2f.png\";","module.exports = __webpack_public_path__ + \"static/media/moon.ca0fb531.png\";","module.exports = __webpack_public_path__ + \"static/media/astronaut.7219d35a.png\";","module.exports = __webpack_public_path__ + \"static/media/vk.5c2652b9.png\";","export const SET_LOGIN = 'SET_LOGIN'\r\nexport const SET_CLOUD = 'SET_CLOUD'\r\nexport const SET_STAR = 'SET_STAR'\r\nexport const SET_LANG = 'SET_LANG'\r\nexport const SET_THEME_MODE = 'SET_THEME_MODE'\r\n\r\nexport function setLogin(state) {\r\n\treturn {\r\n\t\ttype: SET_LOGIN,\r\n\t\tloginState: state,\r\n\t}\r\n}\r\nexport function setCloud(state) {\r\n\treturn {\r\n\t\ttype: SET_CLOUD,\r\n\t\tcloudState: state,\r\n\t}\r\n}\r\nexport function setStar(state) {\r\n\treturn {\r\n\t\ttype: SET_STAR,\r\n\t\tstarState: state,\r\n\t}\r\n}\r\nexport function setCurrLang(state) {\r\n\treturn {\r\n\t\ttype: SET_LANG,\r\n\t\tcurrLangState: state,\r\n\t}\r\n}\r\nexport function setThemeMode(state) {\r\n\treturn {\r\n\t\ttype: SET_THEME_MODE,\r\n\t\tthemeModeState: state,\r\n\t}\r\n}","const words = {\r\n    buttons : {\r\n        signIn: 'Sign in',\r\n        signUp: 'Sign up',\r\n        dreamJoirnal: 'Dream joirnal',\r\n        addDream: 'Add dream',\r\n        addCDream: 'Add C-dream',\r\n        techniques: 'Techniques',\r\n        adventures: 'Adventures',\r\n        close: 'Back',\r\n        about: 'About us',\r\n        cancel: 'Cancel',\r\n    },\r\n    texts: {\r\n        about: 'About us About us About us About us About us About us About us About us About us About us ',\r\n        or: 'OR',\r\n        password: 'Password',\r\n        cancel: 'Cancel',\r\n    },\r\n};\r\n\r\nexport default words;","import { SET_LANG } from '../actions/Actions'\r\nimport EnDict from '../dictionary/en';\r\n\r\nconst initialState = {\r\n    currLang: EnDict,\r\n}\r\n\r\nexport function currLangReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_LANG:\r\n            return { ...state, currLang: action.currLangState }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    name: 'Аноним',\r\n}\r\n\r\nexport function userReducer(state = initialState) {\r\n    return state\r\n}","import { SET_LOGIN } from '../actions/Actions'\r\n\r\nconst initialState = {\r\n  isLogin: false,\r\n}\r\n\r\nexport function loginReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_LOGIN:\r\n      return { ...state, isLogin: action.loginState }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { SET_CLOUD } from '../actions/Actions'\r\n\r\nconst initialState = {\r\n\tclouds: [],\r\n}\r\n\r\nexport function cloudsReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase SET_CLOUD:\r\n\t\t\treturn {\r\n\t\t\t\t...state, clouds: [...state.clouds, action.cloudState]\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import { SET_STAR } from '../actions/Actions'\r\n\r\nconst initialState = {\r\n\tstars: [],\r\n}\r\n\r\nexport function starsReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase SET_STAR:\r\n\t\t\treturn {\r\n\t\t\t\t...state, stars: [...state.stars, action.starState]\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import { SET_THEME_MODE } from '../actions/Actions'\r\n\r\nconst initialState = {\r\n    palette: {\r\n        type: \"dark\",\r\n        primary: { main: \"#3f51b5\" },\r\n        secondary: { main: \"#f50057\" },\r\n    },\r\n}\r\n\r\nexport function themeReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_THEME_MODE:\r\n            return { ...state, palette: action.themeModeState }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { currLangReducer } from './currLang'\r\nimport { userReducer } from './user'\r\nimport { loginReducer } from './login'\r\nimport { cloudsReducer } from './cloud'\r\nimport { starsReducer } from './star'\r\nimport { themeReducer } from './themeMode'\r\n\r\nexport const rootReducer = combineReducers({\r\n    lang: currLangReducer,\r\n    user: userReducer,\r\n    login: loginReducer,\r\n    clouds: cloudsReducer,\r\n    stars: starsReducer,\r\n    themeMode: themeReducer,\r\n})","// import { createStore, applyMiddleware } from 'redux'\r\n// import { rootReducer } from '../reducers'\r\n// import logger from 'redux-logger'\r\n\r\n//export const store = createStore(rootReducer, applyMiddleware(logger))\r\n\r\nimport { createStore } from 'redux'\r\nimport { rootReducer } from '../reducers'\r\n\r\nexport const store = createStore(rootReducer)","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();","import React, { createContext, useState, useEffect } from \"react\";\r\nconst context = createContext(null);\r\n\r\nconst UserProvider = ({ children }) => {\r\n    const [user, setUser] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://10.203.117.137:3001/user\")\r\n            .then(res => res.json())\r\n            .then(res => setUser(res))\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <context.Provider value={user}>\r\n            {children}\r\n        </context.Provider>\r\n    );\r\n};\r\n\r\nUserProvider.context = context;\r\n\r\nexport default UserProvider;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setLogin } from '../actions/Actions';\r\n\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { mdiVk } from '@mdi/js';\r\nimport Icon from '@mdi/react';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        store,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setLoginAction: loginState => dispatch(setLogin(loginState)),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Sign)\r\n\r\nfunction Sign(props) {\r\n    //const { setLoginAction, } = props;\r\n    const { lang, themeMode, } = props.store;\r\n\r\n    const [openLogin, setOpenLogin] = React.useState(false);\r\n\r\n    const checkLoginState = (response) => {\r\n        // console.log(response);\r\n        // if (response.status === 'connected') {\r\n        //     window.VK.Api.call('users.get', { user_ids: response.session.mid, v: \"5.103\", fields: \"sex, bdate, city, country, has_photo, photo_50, photo_100, photo_200_orig, photo_200, photo_400_orig, photo_max, photo_max_orig, domain, timezone, screen_name, crop_photo\" }, function (r) {\r\n        //         console.log(r.response[0]);\r\n        //         setLoginAction(true);\r\n        //     });\r\n        // }\r\n    };\r\n\r\n    const click = (action) => {\r\n        switch (action) {\r\n            case 'useVk':\r\n                //window.VK.Auth.login(checkLoginState, 4194304);\r\n\r\n                break;\r\n            case 'openLogin':\r\n                setOpenLogin(true);\r\n                break;\r\n            case 'closeLogin':\r\n                setOpenLogin(false);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} className={props.classes.menuButtonContainerItem}>\r\n            <Dialog\r\n                open={openLogin}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={() => { click('closeLogin') }}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\" >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">\r\n                    {lang.currLang.buttons.signIn}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Grid item xs={12} className={props.classes.menuButtonContainerItem}>\r\n\r\n                        <Grid item xs={2} className={props.classes.menuDivButton} align=\"center\">\r\n                            <TextField\r\n                                //className={classes.textField}\r\n                                id=\"email-field\"\r\n                                type=\"email\"\r\n                                label=\"Email\"\r\n                            //value={values.email}\r\n                            //onChange={handleChangeEmail}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2} className={props.classes.menuDivButton} align=\"center\">\r\n                            <TextField\r\n                                //id=\"password-field\"\r\n                                //className={classes.textField}\r\n                                //type={values.showPassword ? 'text' : 'password'}\r\n                                label={lang.currLang.texts.password}\r\n                            //value={values.password}\r\n                            //onChange={handleChangePassword}\r\n                            // InputProps={{\r\n                            //     endAdornment: (\r\n                            //         <InputAdornment position=\"end\">\r\n                            //             <IconButton\r\n                            //                 tabIndex=\"-1\"\r\n                            //                 edge=\"end\"\r\n                            //                 aria-label=\"toggle password visibility\"\r\n                            //                 onClick={handleClickShowPassword}\r\n                            //                 onMouseDown={handleMouseDownPassword}\r\n                            //             >\r\n                            //                 {values.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                            //             </IconButton>\r\n                            //         </InputAdornment>\r\n                            //     ),\r\n                            // }}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2} className={props.classes.menuDivButton} align=\"center\">\r\n                            <Typography>\r\n                                {lang.currLang.texts.or}\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={2} className={props.classes.menuDivButton} align=\"center\">\r\n                            <IconButton className={props.classes.button} onClick={() => { click('useVk') }}>\r\n                                <a href={\"http://10.203.117.137:3001/auth/vk\"}\r\n                                    title=\"Войти через ВК\">\r\n                                    <Icon path={mdiVk} size={2} color={themeMode.palette.type === 'light' ? 'rgba(0, 0, 0, 0.54)' : 'rgba(255, 255, 255, 1)'} />\r\n                                </a>\r\n                            </IconButton>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => { click('closeLogin') }} color=\"primary\">\r\n                        {lang.currLang.buttons.cancel}\r\n                    </Button>\r\n                    <Button onClick={() => { click('closeLogin') }} color=\"primary\">\r\n                        {lang.currLang.buttons.signIn}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Grid item xs={2} className={props.classes.menuDivButton} align=\"center\">\r\n                <Button variant=\"contained\" color=\"primary\" className={props.classes.menuButton} onClick={() => { click('openLogin') }}>\r\n                    {lang.currLang.buttons.signIn}\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid item xs={2} className={props.classes.menuDivButton} align=\"center\">\r\n                <Button variant=\"contained\" color=\"primary\" className={props.classes.menuButton}>\r\n                    {lang.currLang.buttons.signUp}\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid item xs={2} className={props.classes.menuDivButton} align=\"center\"></Grid>\r\n\r\n            <Grid item xs={2} className={props.classes.menuDivButton} align=\"center\">\r\n                <Button variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={props.classes.menuButton}\r\n                    onClick={() => (props.onMenuClick('openAboutPage'))} >\r\n                    {lang.currLang.buttons.about}\r\n                </Button>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\nSign.propTypes = {\r\n    setLoginAction: PropTypes.func.isRequired,\r\n}","const words = {\r\n    buttons: {\r\n        signIn: 'Вход',\r\n        signUp: 'Регистрация',\r\n        dreamJoirnal: 'Дневник снов',\r\n        addDream: 'Добавить сон',\r\n        addCDream: 'Добавить осознанный сон',\r\n        techniques: 'Техники',\r\n        adventures: 'Приключения',\r\n        close: 'Назад',\r\n        about: 'О нас',\r\n    },\r\n    texts: {\r\n        about: 'О нас О нас О нас О нас О нас О нас О нас О нас О нас О нас О нас О нас',\r\n        or: 'ИЛИ',\r\n        password: 'Пароль',\r\n        cancel: 'Отмена',\r\n    },\r\n};\r\n\r\nexport default words;","import VKIcon from \"../img/vk.png\";\r\n\r\nexport const data = [{\r\n    img: VKIcon,\r\n    name: \"vkontakte\",\r\n    href: \"auth/vk\",\r\n    alt: \"vl-icon\",\r\n    color: \"#F9AE31\",\r\n    txt: \"Login with VK\"\r\n}];","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport Sign from './Sign';\r\n\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setCloud, setStar, setCurrLang, setThemeMode, setLogin } from '../actions/Actions';\r\n\r\nimport UserProvider from '../contexts/UserProvider';\r\n\r\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport MapImg from '../img/map.png';\r\nimport SunImg from '../img/sun.png';\r\nimport MoonImg from '../img/moon.png';\r\nimport AstronautImg from '../img/astronaut.png';\r\n\r\nimport RuDict from '../dictionary/ru';\r\nimport EnDict from '../dictionary/en';\r\nimport { data } from \"../data/index\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        position: 'fixed',\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    mainPage: {\r\n        top: 0,\r\n        left: 0,\r\n        position: ' absolute',\r\n        transition: 'all 0.3s linear',\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    aboutPage: {\r\n        position: ' absolute',\r\n        transition: 'all 0.3s linear',\r\n        top: '100%',\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    AppDivDark: {\r\n        position: 'fixed',\r\n        background: 'radial-gradient(ellipse at center, rgba(8, 25, 42, 1) 20%, rgba(1, 4, 6, 1) 100%)',\r\n        opacity: 1,\r\n        margin: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        zIndex: -3,\r\n    },\r\n    AppDivLight: {\r\n        position: 'absolute',\r\n        background: 'radial-gradient(ellipse at center, rgba(207, 225, 237, 1) 20%, rgba(127, 170, 202, 1) 100%)',\r\n        transition: 'opacity 0.5s linear',\r\n        margin: 0,\r\n        opacity: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        zIndex: -3,\r\n    },\r\n    AppStarsDiv: {\r\n        transition: 'opacity 0.5s linear',\r\n        opacity: 0,\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        zIndex: -2,\r\n    },\r\n    AppCloudsDiv: {\r\n        transition: 'opacity 0.5s linear',\r\n        opacity: 0,\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        zIndex: -2,\r\n    },\r\n    AppStar: {\r\n        borderRadius: '100%',\r\n        position: 'absolute',\r\n        background: 'radial-gradient(ellipse at center, rgba(177, 198, 219, 1) 2%, rgba(5, 63, 118, 1) 100%)',\r\n        filter: 'blur(1px)',\r\n        animation: '$shine infinite alternate',\r\n        zIndex: -1,\r\n    },\r\n    AppCloud: {\r\n        position: 'absolute',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundImage: 'url(https://www.turbotobias.dk/wp-content/uploads/2019/03/White-cloud-type3.svg)',\r\n        animation: '$moveclouds infinite linear',\r\n        zIndex: -1,\r\n    },\r\n    image: {\r\n        position: 'relative',\r\n        left: '50%',\r\n        top: '25%',\r\n        transform: 'translate(-50%, -25%)',\r\n        width: '35vw !important', // Overrides inline-style\r\n        height: '35vw',\r\n        borderRadius: '50%',\r\n    },\r\n    SkyDiv: {\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n    },\r\n    MoonSrc: {\r\n        backgroundSize: 'cover',\r\n        background: 'url(' + MoonImg + ')',\r\n        backgroundRepeat: 'no-repeat',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        transition: 'all 0.3s linear',\r\n    },\r\n    SunSrc: {\r\n        backgroundSize: 'cover',\r\n        background: 'url(' + SunImg + ')',\r\n        backgroundRepeat: 'no-repeat',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        transition: 'all 0.3s linear',\r\n    },\r\n    AstronautButton: {\r\n        position: 'relative',\r\n        left: '50%',\r\n        top: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '25vw !important', // Overrides inline-style\r\n        height: '25vw',\r\n        borderRadius: '50%',\r\n    },\r\n    AstronautDiv: {\r\n        position: 'absolute',\r\n        borderRadius: '50%',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        animation: '$swinging 30s infinite linear',\r\n    },\r\n    AstronautImg: {\r\n        backgroundSize: 'cover',\r\n        background: 'url(' + AstronautImg + ')',\r\n        backgroundRepeat: 'no-repeat',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        transition: 'filter 0.5s linear',\r\n    },\r\n    MapButton: {\r\n        position: 'relative',\r\n        left: '50%',\r\n        top: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '25vw !important', // Overrides inline-style\r\n        height: '25vw',\r\n        borderRadius: '10%',\r\n    },\r\n    MapDiv: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        animation: '$swinging 30s infinite linear',\r\n    },\r\n    MapImg: {\r\n        backgroundSize: 'cover',\r\n        background: 'url(' + MapImg + ')',\r\n        backgroundRepeat: 'no-repeat',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        transition: 'filter 0.5s linear',\r\n    },\r\n    mainGridContainer: {\r\n        height: '100%',\r\n    },\r\n    mainGridHeadItem: {\r\n        maxWidth: '100% !Important',\r\n    },\r\n    mainGridBodyItem: {\r\n        maxWidth: '100% !Important',\r\n    },\r\n    menuButtonContainerItem: {\r\n        maxWidth: '100% !Important',\r\n    },\r\n    menuButtonContainer: {\r\n        height: '100% !Important',\r\n    },\r\n    menuButtonGrid: {\r\n    },\r\n    menuDivButton: {\r\n        maxWidth: '100% !Important',\r\n        padding: '10px',\r\n    },\r\n    menuButton: {\r\n        minWidth: '55vw',\r\n        maxWidth: '55vw',\r\n    },\r\n    mainGridFooterItem: {\r\n        maxWidth: '100% !Important',\r\n    },\r\n    menuButtonContainerFooterLanguageButtons: {\r\n    },\r\n    aboutGridContainer: {\r\n        width: '100%',\r\n        height: '100%',\r\n        margin: 0,\r\n    },\r\n    aboutGridItem: {\r\n        width: '100%',\r\n    },\r\n    aboutPaper: {\r\n\r\n    },\r\n    VKLoginDiv: {\r\n        position: 'absolute',\r\n        width: '15vw',\r\n        height: '15vw',\r\n    },\r\n    VKLoginButton: {\r\n        background: 'url(https://dressirovka70.ru/wp-content/uploads/2019/10/1200px-VK.com-logo.svg1_-1024x1024.png)',\r\n        boxShadow: '0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)',\r\n        backgroundSize: 'cover',\r\n        borderRadius: '25%',\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    \"@keyframes shine\": {\r\n        \"0%\": {\r\n            transform: 'scale(1)',\r\n            opacity: '1',\r\n        },\r\n        \"20%\": {\r\n            transform: 'scale(.9)',\r\n            opacity: '.8',\r\n        },\r\n        \"40%\": {\r\n            transform: 'scale(1)',\r\n            opacity: '.9',\r\n        },\r\n        \"60%\": {\r\n            transform: 'scale(.2)',\r\n            opacity: '.1',\r\n        },\r\n        \"80%\": {\r\n            transform: 'scale(.5)',\r\n            opacity: '.5',\r\n        },\r\n        \"100%\": {\r\n            transform: 'scale(.9)',\r\n            opacity: '.9',\r\n        },\r\n    },\r\n    \"@keyframes moveclouds\": {\r\n        '100%': {\r\n            left: '-100%',\r\n        },\r\n    },\r\n    \"@keyframes swinging\": {\r\n        '0%': {\r\n            transform: 'rotate(0)',\r\n        },\r\n        '10%': {\r\n            transform: 'rotate(12deg)',\r\n        },\r\n        '20%': {\r\n            transform: 'rotate(-10deg)',\r\n        },\r\n        '30%': {\r\n            transform: 'rotate(9deg)',\r\n        },\r\n        '40%': {\r\n            transform: 'rotate(-8deg)',\r\n        },\r\n        '50%': {\r\n            transform: 'rotate(7deg)',\r\n        },\r\n        '60%': {\r\n            transform: 'rotate(-6deg)',\r\n        },\r\n        '70%': {\r\n            transform: 'rotate(5deg)',\r\n        },\r\n        '80%': {\r\n            transform: 'rotate(-4deg)',\r\n        },\r\n        '90%': {\r\n            transform: 'rotate(3deg)',\r\n        },\r\n        '100%': {\r\n            transform: 'rotate(0)',\r\n        },\r\n    }\r\n}));\r\n\r\nconst params = {\r\n    amountStars: 50,\r\n    amountClouds: 10,\r\n    size: {\r\n        min: 1,\r\n        max: 5,\r\n        giant: 9\r\n    },\r\n    duration: {\r\n        min: 5,\r\n        max: 25,\r\n    }\r\n}\r\n\r\nfunction randomBetween(a, b) {\r\n    return (a + (Math.random() * (b - a)));\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        store,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setCurrLangAction: currLangState => dispatch(setCurrLang(currLangState)),\r\n        setCloudsAction: cloudState => dispatch(setCloud(cloudState)),\r\n        setStarsAction: starState => dispatch(setStar(starState)),\r\n        setThemeModeAction: paletteState => dispatch(setThemeMode(paletteState)),\r\n        setLoginAction: loginState => dispatch(setLogin(loginState)),\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MainPage);\r\n\r\nfunction MainPage(props) {\r\n    const classes = useStyles();\r\n    const userData = useContext(UserProvider.context);\r\n    const loginType = !_.isEmpty(userData) ? _.find(data, d => d.name === userData.provider) : {};\r\n    //console.log(typeof(loginType));\r\n    //setLoginAction\r\n    console.log(userData);\r\n\r\n    const {\r\n        lang,\r\n        //user,\r\n        login,\r\n        clouds,\r\n        stars,\r\n        themeMode, } = props.store;\r\n\r\n    const muiTheme = createMuiTheme(themeMode);\r\n\r\n    const {\r\n        setCurrLangAction,\r\n        setCloudsAction,\r\n        setStarsAction,\r\n        setThemeModeAction,\r\n        setLoginAction, } = props;\r\n\r\n    const [page, setPage] = useState({\r\n        mainPage: true,\r\n        aboutPage: false,\r\n    });\r\n\r\n    const switchMode = () => {\r\n        let newPaletteType = themeMode.palette.type === \"light\" ? \"dark\" : \"light\";\r\n        let primaryColor = themeMode.palette.type === \"light\" ? \"#f9a825\" : \"#3f51b5\";\r\n        let secondaryColor = themeMode.palette.type === \"light\" ? \"#f50057\" : \"#f50057\";\r\n        setThemeModeAction({\r\n            type: newPaletteType,\r\n            primary: { main: primaryColor },\r\n            secondary: { main: secondaryColor },\r\n        });\r\n    }\r\n    const onAstronautClick = () => {\r\n        alert('Тут должны перейти на страницу космонафта');\r\n    };\r\n    const onMapClick = () => {\r\n        alert('Тут должны перейти на страницу карты');\r\n    };\r\n    const changeLanguage = (language) => {\r\n        if (language === 'Ru') {\r\n            setCurrLangAction(RuDict);\r\n        }\r\n        else {\r\n            setCurrLangAction(EnDict);\r\n        }\r\n    }\r\n    const onMenuClick = (action) => {\r\n        let newPages = page;\r\n        switch (action) {\r\n            case 'openAboutPage':\r\n                newPages = { ...newPages, aboutPage: true };\r\n                newPages = { ...newPages, mainPage: false };\r\n                setPage(newPages);\r\n                break;\r\n            case 'closeAboutPage':\r\n                newPages = { ...newPages, aboutPage: false };\r\n                newPages = { ...newPages, mainPage: true };\r\n                setPage(newPages);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        for (let i = 0; i < params.amountStars; i++) {\r\n            let size = Math.round(Math.random() * 10) === 0 ? params.size.giant : randomBetween(params.size.min, params.size.max);\r\n            setStarsAction(\r\n                <div className={classes.AppStar}\r\n                    key={i}\r\n                    style={{\r\n                        left: randomBetween(0, 100) + \"%\",\r\n                        top: randomBetween(0, 100) + \"%\",\r\n                        width: size + \"px\",\r\n                        height: size + \"px\",\r\n                        boxShadow: \"0 0 \" + size + \"px \" + size / 2 + \"px #043668\",\r\n                        animationDuration: randomBetween(params.duration.min, params.duration.max) + \"s\",\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n        for (let i = 0; i < params.amountClouds; i++) {\r\n            let left = Math.round(Math.random() * 50 + 90);\r\n            let top = Math.round(Math.random() * 100 / 100 * 90);\r\n            let scale = Math.random() * 1.5 - 0.5;\r\n            let opacity = Math.random() * 90 / 100;\r\n            let speed = Math.random() * 30 + 15;\r\n            setCloudsAction(\r\n                <div className={classes.AppCloud}\r\n                    key={i}\r\n                    style={{\r\n                        left: left + '%',\r\n                        top: top + '%',\r\n                        width: '400px',\r\n                        height: '100px',\r\n                        transform: 'scale(' + scale + ')',\r\n                        opacity: opacity,\r\n                        animationDuration: speed + 's',\r\n                    }} />\r\n            );\r\n        }\r\n\r\n        if (new Date().getHours() > 15) {\r\n            setThemeModeAction({\r\n                type: \"dark\",\r\n                primary: { main: \"#f9a825\" },\r\n                secondary: { main: \"#f50057\" },\r\n            });\r\n        }\r\n        else {\r\n            setThemeModeAction({\r\n                type: \"light\",\r\n                primary: { main: \"#3f51b5\" },\r\n                secondary: { main: \"#f50057\" },\r\n            });\r\n        }\r\n    }, [classes, setCloudsAction, setStarsAction, setThemeModeAction]);\r\n\r\n    return (\r\n        <MuiThemeProvider theme={muiTheme}>\r\n            <CssBaseline />\r\n            <div className={classes.AppDivDark}>\r\n                <div className={classes.AppDivLight} style={themeMode.palette.type === \"light\" ? { opacity: 1, } : { opacity: 0, }} />\r\n                {themeMode.palette.type === \"light\" ?\r\n                    <div className={classes.AppCloudsDiv} style={themeMode.palette.type === \"light\" ? { opacity: 1, } : { opacity: 0, }} >\r\n                        {clouds.clouds}\r\n                    </div>\r\n                    :\r\n                    <div className={classes.AppStarsDiv} style={themeMode.palette.type === \"light\" ? { opacity: 0, } : { opacity: 1, }} >\r\n                        {stars.stars}\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div className={classes.root}>\r\n\r\n                <div className={classes.mainPage} style={page.mainPage === true ? { transform: 'translateY(0%)' } : { transform: 'translateY(-100%)' }} >\r\n\r\n                    <Grid className={classes.mainGridContainer}\r\n                        container\r\n                        direction=\"column\"\r\n                        justify=\"center\"\r\n                        alignItems=\"stretch\" >\r\n\r\n                        <Grid item xs={4} className={classes.mainGridHeadItem} >\r\n                            <Grid container className={classes.mainGridContainer}\r\n                                direction=\"row\"\r\n                                justify=\"space-around\"\r\n                                alignItems=\"stretch\" >\r\n                                {login.isLogin &&\r\n                                    <Grid item xs={4} >\r\n                                        <ButtonBase className={classes.AstronautButton}\r\n                                            type='button'\r\n                                            focusRipple\r\n                                            onClick={onAstronautClick}>\r\n                                            <div className={classes.AstronautDiv}>\r\n                                                <div className={classes.AstronautImg} style={themeMode.palette.type === \"light\" ? { filter: 'invert(0)', } : { filter: 'invert(1)', }} />\r\n                                            </div>\r\n                                        </ButtonBase>\r\n                                    </Grid>\r\n                                }\r\n                                <Grid item xs={4} >\r\n                                    <ButtonBase className={classes.image}\r\n                                        type='button'\r\n                                        focusRipple\r\n                                        onClick={switchMode}>\r\n                                        <div className={classes.SkyDiv}>\r\n                                            <div className={classes.SunSrc} style={themeMode.palette.type === \"dark\" ? { transform: 'translateY(36vw)' } : { transform: 'translateY(0)' }} />\r\n                                            <div className={classes.MoonSrc} style={themeMode.palette.type === \"dark\" ? { transform: 'translateY(0)' } : { transform: 'translateY(-36vw)' }} />\r\n                                        </div>\r\n                                    </ButtonBase>\r\n                                </Grid>\r\n                                {login.isLogin &&\r\n                                    <Grid item xs={4} >\r\n                                        <ButtonBase className={classes.MapButton}\r\n                                            type='button'\r\n                                            focusRipple\r\n                                            onClick={onMapClick}>\r\n                                            <div className={classes.MapDiv}>\r\n                                                <div className={classes.MapImg} style={themeMode.palette.type === \"light\" ? { filter: 'invert(0)', } : { filter: 'invert(1)', }} />\r\n                                            </div>\r\n                                        </ButtonBase>\r\n                                    </Grid>\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={7} className={classes.mainGridBodyItem} >\r\n\r\n                            <Grid className={classes.mainGridContainer}\r\n                                container\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                                alignItems=\"stretch\" >\r\n\r\n                                <Grid className={classes.menuButtonContainer}\r\n                                    container\r\n                                    direction=\"column\"\r\n                                    justify=\"center\"\r\n                                    alignItems=\"stretch\" >\r\n\r\n\r\n                                    {!login.isLogin && <Sign classes={classes} onMenuClick={onMenuClick} />}\r\n\r\n                                    {login.isLogin &&\r\n                                        <Grid item xs={12} className={classes.menuButtonContainerItem} >\r\n\r\n                                            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                                                <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\r\n                                                    {lang.currLang.buttons.dreamJoirnal}\r\n                                                </Button>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                                                <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\r\n                                                    {lang.currLang.buttons.addDream}\r\n                                                </Button>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                                                <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\r\n                                                    {lang.currLang.buttons.addCDream}\r\n                                                </Button>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                                                <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\r\n                                                    {lang.currLang.buttons.techniques}\r\n                                                </Button>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                                                <Button variant=\"contained\" color=\"primary\" className={classes.menuButton}>\r\n                                                    {lang.currLang.buttons.adventures}\r\n                                                </Button>\r\n                                            </Grid>\r\n\r\n                                            <Grid item xs={2} className={classes.menuDivButton} align=\"center\">\r\n                                                <Button variant=\"contained\"\r\n                                                    color=\"primary\"\r\n                                                    className={classes.menuButton}\r\n                                                    onClick={() => (onMenuClick('openAboutPage'))} >\r\n                                                    {lang.currLang.buttons.about}\r\n                                                </Button>\r\n                                            </Grid>\r\n\r\n                                        </Grid>\r\n                                    }\r\n\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={1} className={classes.mainGridFooterItem} >\r\n\r\n                            <Grid className={classes.menuButtonContainerFooterLanguageButtons}\r\n                                container\r\n                                direction=\"row\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\" >\r\n\r\n                                <Grid item>\r\n                                    <Button onClick={() => { changeLanguage('Ru') }}>\r\n                                        RU\r\n                                        </Button>\r\n                                </Grid>\r\n\r\n                                <Grid item>\r\n                                    <Button onClick={() => { changeLanguage('En') }}>\r\n                                        EN\r\n                                        </Button>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                </div>\r\n\r\n                <div className={classes.aboutPage} style={page.aboutPage === true ? { transform: 'translateY(-100%)' } : { transform: 'translateY(0%)' }} >\r\n\r\n                    <Grid className={classes.aboutGridContainer}\r\n                        container\r\n                        direction=\"column\"\r\n                        justify=\"center\"\r\n                        alignItems=\"stretch\"\r\n                        spacing={5} >\r\n\r\n                        <Grid item\r\n                            className={classes.aboutGridItem}\r\n                            align='center'>\r\n\r\n                            <Paper className={classes.aboutPaper}>\r\n                                <Typography>\r\n                                    {lang.currLang.texts.about}\r\n                                </Typography>\r\n                            </Paper>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item\r\n                            className={classes.aboutGridItem}\r\n                            align='center'>\r\n\r\n                            <Button variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.menuButton}\r\n                                onClick={() => (onMenuClick('closeAboutPage'))} >\r\n                                {lang.currLang.buttons.close}\r\n                            </Button>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </MuiThemeProvider>\r\n    );\r\n};","import React from 'react';\nimport { Router, Route } from \"react-router-dom\";\nimport history from \"../history\";\nimport './App.css';\nimport UserProvider from '../contexts/UserProvider';\nimport MainPage from \"./MainPage\";\n\nconst App = () => {\n\n    return (\n        <Router history={history}>\n            <UserProvider>\n                <Route path=\"/\" component={MainPage} />\n            </UserProvider>\n        </Router >\n    );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { store } from './store/configureStore'\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}